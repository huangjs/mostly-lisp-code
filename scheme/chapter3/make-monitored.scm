(define (make-monitored f)
  (define count 0)
  (define (how-many-calls?) count)
  (define (reset-count) (set! count 0))
  (define (add-count a) (set! count (+ a count)))
  (define (count-inc) (add-count 1))
  (define (mf m)
    (cond ((eq? m 'how-many-calls?) (how-many-calls?))
          ((eq? m 'reset-count) (reset-count))
          (else (begin (count-inc)
                       (f m)))))
  mf)

;:*=======================
;:* another version
(define (make-monitored f)
  (let ((count 0))
    (define (how-many-calls?) count)
    (define (reset-count) (set! count 0))
    (define (add-count a) (set! count (+ a count)))
    (define (count-inc) (add-count 1))
    (define (mf m)
      (cond ((eq? m 'how-many-calls?) (how-many-calls?))
            ((eq? m 'reset-count) (reset-count))
            (else (begin (count-inc)
                         (f m)))))
    mf))
