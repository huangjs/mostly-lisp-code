(* Content-type: application/mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 6.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       145,          7]
NotebookDataLength[    268354,       5824]
NotebookOptionsPosition[    256751,       5413]
NotebookOutlinePosition[    257125,       5430]
CellTagsIndexPosition[    257082,       5427]
WindowFrame->Normal
ContainsDynamic->False*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"List", "[", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}]], "Input",
 CellChangeTimes->{{3.391730517221349*^9, 3.39173052244355*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.391730523862474*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Input",
 CellChangeTimes->{{3.391743711474023*^9, 3.391743714511794*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}]], "Output",
 CellChangeTimes->{3.39174371567343*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.39174371727396*^9, 3.3917437238282337`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.391743724912717*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2.3", ",", 
    RowBox[{"x", "+", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.391744563809376*^9, 3.391744587545704*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2.3`", ",", 
   RowBox[{"4", "+", "x"}]}], "}"}]], "Output",
 CellChangeTimes->{3.3917445892248363`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"VectorQ", "[", "v", "]"}]], "Input",
 CellChangeTimes->{{3.391744591951371*^9, 3.391744598913817*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.391744599822962*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"v", ".", "v"}]], "Input",
 CellChangeTimes->{{3.3917446045083017`*^9, 3.391744605017826*^9}}],

Cell[BoxData[
 RowBox[{"6.289999999999999`", "\[InvisibleSpace]", "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"4", "+", "x"}], ")"}], "2"]}]], "Output",
 CellChangeTimes->{3.391744605949341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "4", ",", "9"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.391744659660767*^9, 3.391744669785954*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "4", ",", "9"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.39174467038415*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"MatrixQ", "[", "m", "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.391744672791396*^9, 3.391744675847678*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.391744676334929*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"m", ".", 
  RowBox[{"Transpose", "[", "m", "]"}]}]], "Input",
 CellChangeTimes->{{3.391744679563985*^9, 3.3917446869879723`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "36"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"36", ",", "98"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391744687937066*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Det", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", "m", "]"}], ".", "m"}], "]"}]], "Input",
 CellChangeTimes->{{3.391744691873597*^9, 3.391744699604545*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.391744700700247*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Transpose", "[", "m", "]"}], ".", "m"}]], "Input",
 CellChangeTimes->{{3.39174471563375*^9, 3.391744720059833*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"2", ",", "6", ",", "12"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "20", ",", "42"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"12", ",", "42", ",", "90"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391744720724337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ra", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"13", ",", "14", ",", "15"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"16", ",", "17", ",", "18"}], "}"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"19", ",", "20", ",", "21"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"22", ",", "23", ",", "24"}], "}"}]}], "}"}]}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.391744754699089*^9, 3.3917447642003527`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "9"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"10", ",", "11", ",", "12"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"13", ",", "14", ",", "15"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"16", ",", "17", ",", "18"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"19", ",", "20", ",", "21"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"22", ",", "23", ",", "24"}], "}"}]}], "}"}]}], "}"}]], "Output",\

 CellChangeTimes->{3.3917447649590282`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixQ", "[", "ra", "]"}]], "Input",
 CellChangeTimes->{{3.391744770434247*^9, 3.3917447748736877`*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.391744775905896*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayQ", "[", "ra", "]"}]], "Input",
 CellChangeTimes->{{3.391744777207244*^9, 3.391744779009273*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.391744779445388*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ra", ".", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.3917447820192137`*^9, 3.3917447848335857`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"14", ",", "32"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"50", ",", "68"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"86", ",", "104"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"122", ",", "140"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391744785714732*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fourier", "[", "ra", "]"}]], "Input",
 CellChangeTimes->{{3.39174479043719*^9, 3.391744793050346*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"61.23724356957946`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2.4494897427831783`"}], "-", 
        RowBox[{"1.4142135623730951`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{
        RowBox[{"-", "2.4494897427831783`"}], "+", 
        RowBox[{"1.4142135623730951`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",",
      
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "7.348469228349535`"}], "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "14.69693845669907`"}], "-", 
        RowBox[{"14.69693845669907`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "14.69693845669907`"}], "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "14.69693845669907`"}], "+", 
        RowBox[{"14.69693845669907`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}], ",", 
       RowBox[{"0.`", "\[InvisibleSpace]", "+", 
        RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]}], "}"}]}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.3917447941343803`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"ragged", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4", ",", "5"}], "}"}], ",", 
    RowBox[{"{", "6", "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.391744800916353*^9, 3.391744804970389*^9}, {
  3.3917468397168922`*^9, 3.391746848858972*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Input",
 CellChangeTimes->{{3.391746849334982*^9, 3.391746877769764*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", "6", "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391746878463628*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ragged", "[", 
  RowBox[{"[", 
   RowBox[{"All", ",", "1"}], "]"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.3917468821187887`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"Total", ",", "ragged"}], "]"}]], "Input",
 CellChangeTimes->{{3.391746907515624*^9, 3.391746916788855*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "9", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.3917469176856127`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadRight", "[", "ragged", "]"}]], "Input",
 CellChangeTimes->{{3.391746934161798*^9, 3.391746938394578*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "5", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391746939121451*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PadLeft", "[", "ragged", "]"}]], "Input",
 CellChangeTimes->{{3.391746953789517*^9, 3.391746956522134*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "4", ",", "5"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "6"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.3917469569919662`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", "4", "]"}]], "Input",
 CellChangeTimes->{{3.391746990671811*^9, 3.391746992566427*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.391746993212137*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"4", ",", 
   RowBox[{"-", "4"}], ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917469951652193`*^9, 3.391747001042931*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2", ",", "0", ",", 
   RowBox[{"-", "2"}], ",", 
   RowBox[{"-", "4"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391747001919125*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Range", "[", 
  RowBox[{"0.", ",", "1.", ",", ".1"}], "]"}]], "Input",
 CellChangeTimes->{{3.391747006568071*^9, 3.391747014555334*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.1`", ",", "0.2`", ",", "0.30000000000000004`", ",", "0.4`", 
   ",", "0.5`", ",", "0.6000000000000001`", ",", "0.7000000000000001`", ",", 
   "0.8`", ",", "0.9`", ",", "1.`"}], "}"}]], "Output",
 CellChangeTimes->{3.391747015288759*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"f", ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.391747021207602*^9, 3.391747023903966*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391747024506331*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"2", "^", "#"}], "&"}], ",", "4"}], "]"}]], "Input",
 CellChangeTimes->{{3.391747026053526*^9, 3.391747042708527*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "8", ",", "16"}], "}"}]], "Output",
 CellChangeTimes->{3.391747043435313*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"h", "[", 
   RowBox[{"i_", ",", "j_"}], "]"}], ":=", 
  RowBox[{"1", "/", 
   RowBox[{"(", 
    RowBox[{"i", "+", "j", "-", "1"}], ")"}]}]}]], "Input",
 CellChangeTimes->{{3.391747066096538*^9, 3.391747085082209*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Array", "[", 
  RowBox[{"h", ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391747094939219*^9, 3.39174710391054*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "6"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391747104556149*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"f", "[", "i", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917471373807497`*^9, 3.3917471456655807`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391747146275269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"2", "^", "i"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391747157371244*^9, 3.391747170296701*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1", "16"], ",", 
   FractionBox["1", "8"], ",", 
   FractionBox["1", "4"], ",", 
   FractionBox["1", "2"], ",", "1", ",", "2", ",", "4", ",", "8", ",", "16"}],
   "}"}]], "Output",
 CellChangeTimes->{3.391747170991269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"h", "[", 
     RowBox[{"i", ",", "j"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"i", ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "3"}], "}"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.3917471810127583`*^9, 3.391747199914558*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", 
     FractionBox["1", "2"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "3"], ",", 
     FractionBox["1", "4"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "6"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.39174720040623*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"h", "[", 
    RowBox[{"i", ",", "j"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "4"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "i"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.39174721728375*^9, 3.391747232618848*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "2"], ",", 
     FractionBox["1", "3"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "3"], ",", 
     FractionBox["1", "4"], ",", 
     FractionBox["1", "5"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", "4"], ",", 
     FractionBox["1", "5"], ",", 
     FractionBox["1", "6"], ",", 
     FractionBox["1", "7"]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.3917472334752817`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"NestList", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"3", "#", 
     RowBox[{"(", 
      RowBox[{"1", "-", "#"}], ")"}]}], "&"}], ",", ".1", ",", "20"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.391747248112298*^9, 3.391747264251886*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.1`", ",", "0.27`", ",", "0.5912999999999999`", ",", 
   "0.7249929300000001`", ",", "0.5981345443500452`", ",", 
   "0.721108833615627`", ",", "0.6033326510914109`", ",", 
   "0.7179670896552622`", ",", "0.6074710434816446`", ",", 
   "0.7153499244388993`", ",", "0.6108732301324811`", ",", 
   "0.7131213805199696`", ",", "0.6137378314957869`", ",", 
   "0.7111911170599079`", ",", "0.6161949362249649`", ",", 
   "0.709496210387029`", ",", "0.6183340135004209`", ",", 
   "0.7079911837466466`", ",", "0.6202190024510061`", ",", 
   "0.706642174349055`", ",", "0.6218970353408844`"}], "}"}]], "Output",
 CellChangeTimes->{3.3917472647953176`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Filling", "\[Rule]", "Axis"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391747283000484*^9, 3.391747297188586*^9}}],

Cell[BoxData[
 GraphicsBox[
  GraphicsComplexBox[{{1., 0.41186459578654083`}, {1., 0.45}, {3., 
   0.5912999999999999}, {4., 0.7249929300000001}, {5., 0.5981345443500452}, {
   6., 0.721108833615627}, {7., 0.6033326510914109}, {8., 
   0.7179670896552622}, {9., 0.6074710434816446}, {10., 0.7153499244388993}, {
   11., 0.6108732301324811}, {12., 0.7131213805199696}, {13., 
   0.6137378314957869}, {14., 0.7111911170599079}, {15., 
   0.6161949362249649}, {16., 0.709496210387029}, {17., 0.6183340135004209}, {
   18., 0.7079911837466466}, {19., 0.6202190024510061}, {20., 
   0.706642174349055}, {21., 0.6218970353408844}, {2.441533133478185, 
   0.41186459578654083`}, {3., 0.45}, {4., 0.45}, {5., 0.45}, {6., 0.45}, {7.,
    0.45}, {8., 0.45}, {9., 0.45}, {10., 0.45}, {11., 0.45}, {12., 0.45}, {
   13., 0.45}, {14., 0.45}, {15., 0.45}, {16., 0.45}, {17., 0.45}, {18., 
   0.45}, {19., 0.45}, {20., 0.45}, {21., 0.45}, {1., 0.1}, {2., 0.27}, {3., 
   0.5912999999999999}, {4., 0.7249929300000001}, {5., 0.5981345443500452}, {
   6., 0.721108833615627}, {7., 0.6033326510914109}, {8., 
   0.7179670896552622}, {9., 0.6074710434816446}, {10., 0.7153499244388993}, {
   11., 0.6108732301324811}, {12., 0.7131213805199696}, {13., 
   0.6137378314957869}, {14., 0.7111911170599079}, {15., 
   0.6161949362249649}, {16., 0.709496210387029}, {17., 0.6183340135004209}, {
   18., 0.7079911837466466}, {19., 0.6202190024510061}, {20., 
   0.706642174349055}, {21., 0.6218970353408844}}, {{{}, {}, {}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{2, 1}]}, 
     {Hue[0.67, 0.6, 0.6], Opacity[0.2], LineBox[{23, 3}], LineBox[{24, 4}], 
      LineBox[{25, 5}], LineBox[{26, 6}], LineBox[{27, 7}], LineBox[{28, 8}], 
      LineBox[{29, 9}], LineBox[{30, 10}], LineBox[{31, 11}], 
      LineBox[{32, 12}], LineBox[{33, 13}], LineBox[{34, 14}], 
      LineBox[{35, 15}], LineBox[{36, 16}], LineBox[{37, 17}], 
      LineBox[{38, 18}], LineBox[{39, 19}], LineBox[{40, 20}], 
      LineBox[{41, 21}]}}, {{}, 
     {Hue[0.67, 0.6, 0.6], 
      PointBox[{42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 
       57, 58, 59, 60, 61, 62}]}, {}}}],
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0.45},
  PlotRange->{{0., 21.}, {0.41186459578654083`, 0.7249929300000001}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.39174730043305*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"rolls", ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"prev", "=", "0"}], ",", "next", ",", 
      RowBox[{"r6", "=", 
       RowBox[{"Range", "[", "6", "]"}]}]}], "}"}], ",", 
    RowBox[{
     RowBox[{"Reap", "[", "\[IndentingNewLine]", "\t\t", 
      RowBox[{"While", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"next", "=", 
           RowBox[{"RandomChoice", "[", "r6", "]"}]}], ")"}], "\[NotEqual]", 
         "prev"}], ",", "\[IndentingNewLine]", "\t\t", 
        RowBox[{
         RowBox[{"Sow", "[", "next", "]"}], ";", 
         RowBox[{"prev", "=", "next"}]}]}], "]"}], "]"}], "[", 
     RowBox[{"[", 
      RowBox[{"2", ",", "1"}], "]"}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3917491193492203`*^9, 3.391749129891041*^9}, {
   3.391749176143334*^9, 3.391749270722172*^9}, 3.391749328980908*^9, 
   3.391749377262282*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.391749278678658*^9, 3.3917492793200006`*^9}, {
  3.3917493462913322`*^9, 3.39174935112184*^9}}],

Cell[CellGroupData[{

Cell[BoxData["rolls"], "Input",
 CellChangeTimes->{{3.391749357308138*^9, 3.391749364328331*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"6", ",", "1", ",", "6", ",", "5", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{{3.391749399159606*^9, 3.391749411864139*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "+", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.3917492804923353`*^9, 3.391749332775242*^9, {3.391749364977825*^9, 
   3.391749434658903*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"1", "+", "a"}], ",", 
   RowBox[{"2", "+", "b"}], ",", 
   RowBox[{"3", "+", "c"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749435450589*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"2", "*", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.391749443568634*^9, 3.391749447099326*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "4", ",", "6"}], "}"}]], "Output",
 CellChangeTimes->{3.39174944751017*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sin", "[", 
  RowBox[{"2", "Pi", "*", 
   RowBox[{"Range", "[", 
    RowBox[{"0.", ",", "1.", ",", 
     RowBox[{"1", "/", "13"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749452539221*^9, 3.3917494863969*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.`", ",", "0.46472317204376856`", ",", "0.8229838658936565`", ",", 
   "0.992708874098054`", ",", "0.9350162426854148`", ",", 
   "0.6631226582407952`", ",", "0.23931566428755768`", ",", 
   RowBox[{"-", "0.2393156642875583`"}], ",", 
   RowBox[{"-", "0.6631226582407953`"}], ",", 
   RowBox[{"-", "0.9350162426854147`"}], ",", 
   RowBox[{"-", "0.992708874098054`"}], ",", 
   RowBox[{"-", "0.822983865893656`"}], ",", 
   RowBox[{"-", "0.4647231720437684`"}], ",", 
   RowBox[{"-", "2.4492127076447545`*^-16"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.391749479109539*^9, 3.391749487183865*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"a", "*", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{
  3.391749386405525*^9, {3.391749492510359*^9, 3.391749502469584*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", 
     RowBox[{"2", " ", "a"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", " ", "a"}], ",", 
     RowBox[{"4", " ", "a"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749502969639*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "+", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.391749519454885*^9, 3.391749527742592*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"1", "+", "a"}], ",", 
     RowBox[{"2", "+", "a"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"3", "+", "b"}], ",", 
     RowBox[{"4", "+", "b"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749528199849*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Exp", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"1.", ",", "2.", ",", "3."}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"4.", ",", "5.", ",", "6."}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.391749539058062*^9, 3.391749555894998*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "2.718281828459045`", ",", "7.38905609893065`", ",", 
     "20.085536923187668`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "54.598150033144236`", ",", "148.4131591025766`", ",", 
     "403.4287934927351`"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.3917495566065483`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"f", ",", "Listable"}], "]"}]], "Input",
 CellChangeTimes->{{3.391749595099329*^9, 3.39174960365056*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.3917496081972*^9, 3.3917496114490557`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.3917496118926153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.39174964311287*^9, 3.391749648998233*^9}}],

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{"1", ",", "2", ",", "3"}], "]"}]], "Output",
 CellChangeTimes->{3.391749649571412*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749659691758*^9, 3.391749672295456*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "3", ",", "5"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"2", ",", "4", ",", "6"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749672930139*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Apply", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "1", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917496864424143`*^9, 3.391749699821763*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"1", ",", "2"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"3", ",", "4"}], "]"}], ",", 
   RowBox[{"f", "[", 
    RowBox[{"5", ",", "6"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749700247067*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749719640518*^9, 3.3917497241329*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"f", "[", "1", "]"}], ",", 
   RowBox[{"f", "[", "2", "]"}], ",", 
   RowBox[{"f", "[", "3", "]"}], ",", 
   RowBox[{"f", "[", "4", "]"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749724781272*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749729870533*^9, 3.391749738088518*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "3", "]"}], ",", 
     RowBox[{"f", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "5", "]"}], ",", 
     RowBox[{"f", "[", "6", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749738530097*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", 
   RowBox[{"{", "2", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749774859831*^9, 3.391749786647971*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "1", "]"}], ",", 
     RowBox[{"f", "[", "2", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "3", "]"}], ",", 
     RowBox[{"f", "[", "4", "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", "5", "]"}], ",", 
     RowBox[{"f", "[", "6", "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749787063313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"5", ",", "6"}], "}"}]}], "}"}], ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.391749792281598*^9, 3.391749802817666*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "1", "]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "2", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "3", "]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "4", "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "5", "]"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"f", "[", "6", "]"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749803461248*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "=", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "8"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.391749814567504*^9, 3.391749820490561*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "2", ",", "4", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.391749820964965*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{"Print", "[", 
    RowBox[{"{", 
     RowBox[{"i", ",", 
      RowBox[{"Log", "[", 
       RowBox[{"2", ",", "i"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "list"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749824695661*^9, 3.3917498539737186`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0"}], "}"}]], "Print",
 CellChangeTimes->{3.391749854592545*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"2", ",", "1"}], "}"}]], "Print",
 CellChangeTimes->{3.391749854631621*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"4", ",", "2"}], "}"}]], "Print",
 CellChangeTimes->{3.391749854682076*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"8", ",", "3"}], "}"}]], "Print",
 CellChangeTimes->{3.391749854731596*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"2", ",", "i"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "list"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917498580323267`*^9, 3.391749869435072*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1", ",", "2", ",", "3"}], "}"}]], "Output",
 CellChangeTimes->{3.391749870059195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{"k", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "list"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749879379097*^9, 3.391749884475501*^9}}],

Cell[BoxData["15"], "Output",
 CellChangeTimes->{3.391749884904593*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.391749907701148*^9, 3.391749909371935*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "4", ",", "8"}], "}"}], "[", "3", 
  "]"}]], "Output",
 CellChangeTimes->{3.391749909989966*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.391749910752801*^9, 3.3917499229990473`*^9}}],

Cell[BoxData["4"], "Output",
 CellChangeTimes->{3.391749923419198*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", 
   RowBox[{"{", 
    RowBox[{"1", ",", 
     RowBox[{"-", "1"}]}], "}"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.391749928077739*^9, 3.391749933798223*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "8"}], "}"}]], "Output",
 CellChangeTimes->{3.391749934218793*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"list", "[", 
  RowBox[{"[", 
   RowBox[{"1", ";;", 
    RowBox[{"-", "1"}], ";;", "2"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.391749944759907*^9, 3.391749951635397*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "4"}], "}"}]], "Output",
 CellChangeTimes->{3.391749952045776*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Outer", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391749984987982*^9, 3.391749993907775*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "a"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "b"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"1", ",", "c"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "a"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "b"}], "]"}], ",", 
     RowBox[{"f", "[", 
      RowBox[{"2", ",", "c"}], "]"}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391749994389195*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391750003115398*^9, 3.3917500135723257`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inner", "::", "\<\"incom\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"Length \\!\\(2\\) of dimension \\!\\(1\\) in \\!\\({1, \
2}\\) is incommensurate with length \\!\\(3\\) of dimension 1 in \\!\\({a, b, \
c}\\). \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Inner/incom\\\", ButtonNote -> \
\\\"Inner::incom\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.391750014130301*^9}],

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.391750014156266*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{"f", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391750028117764*^9, 3.3917500297763863`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"1", ",", "a"}], "]"}], "+", 
  RowBox[{"f", "[", 
   RowBox[{"2", ",", "b"}], "]"}]}]], "Output",
 CellChangeTimes->{3.391750030238205*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917500410621643`*^9, 3.3917500462443237`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Inner", "::", "\<\"argb\"\>"}], 
  RowBox[{
  ":", " "}], "\<\"\\!\\(Inner\\) called with \\!\\(2\\) arguments; between \
\\!\\(3\\) and \\!\\(5\\) arguments are expected. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/argb\\\", ButtonNote -> \
\\\"Inner::argb\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.391750046855283*^9}],

Cell[BoxData[
 RowBox[{"Inner", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "b"}], "}"}]}], "]"}]], "Output",
 CellChangeTimes->{3.391750046880063*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s", "=", 
  RowBox[{"{", 
   RowBox[{"a", ",", "b", ",", "c"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.3917500767965603`*^9, 3.391750081500099*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.391750082003571*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s1", "=", "s"}]], "Input",
 CellChangeTimes->{{3.391750083721262*^9, 3.3917500886075697`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c"}], "}"}]], "Output",
 CellChangeTimes->{3.3917500891670218`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", 
  RowBox[{"{", 
   RowBox[{"c", ",", "d", ",", "e"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.391750089976153*^9, 3.391750096132674*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.391750096640666*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Complement", "[", 
  RowBox[{"s1", ",", "s2"}], "]"}]], "Input",
 CellChangeTimes->{{3.391750098580625*^9, 3.3917501040766687`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b"}], "}"}]], "Output",
 CellChangeTimes->{3.391750104774126*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Union", "[", 
  RowBox[{"s1", ",", "s2"}], "]"}]], "Input",
 CellChangeTimes->{{3.3917501065437202`*^9, 3.391750111644898*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"a", ",", "b", ",", "c", ",", "d", ",", "e"}], "}"}]], "Output",
 CellChangeTimes->{3.39175011205269*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Intersection", "[", 
  RowBox[{"s1", ",", "s2"}], "]"}]], "Input",
 CellChangeTimes->{{3.391750114073344*^9, 3.391750117992433*^9}}],

Cell[BoxData[
 RowBox[{"{", "c", "}"}]], "Output",
 CellChangeTimes->{3.391750118426839*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Subsets", "[", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3"}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.391750125927979*^9, 3.391750130757951*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "}"}], ",", 
   RowBox[{"{", "1", "}"}], ",", 
   RowBox[{"{", "2", "}"}], ",", 
   RowBox[{"{", "3", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "3"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.3917501312030277`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Tuples", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"0", ",", "1"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "b"}], "}"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.39175013392698*^9, 3.3917501453983192`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "b"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "a"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "b"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391750145936295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"IntegerPartitions", "[", "5", "]"}]], "Input",
 CellChangeTimes->{{3.391750157471727*^9, 3.391750165641798*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", "5", "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"4", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "2"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"3", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "2", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1", ",", "1"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.3917501664332447`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sin", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", 
     RowBox[{"Pi", "/", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917501707715683`*^9, 3.391750174610505*^9}, {
  3.391752499523917*^9, 3.391752530351494*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.391752533065118*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ifun", " ", "=", " ", 
  RowBox[{"NDSolve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
       RowBox[{"x", "[", "t", "]"}]}], ",", 
      RowBox[{
       RowBox[{"x", "[", "0", "]"}], "\[Equal]", "1"}]}], "}"}], ",", "x", 
    ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.391752535738503*^9, 3.39175256478233*^9}, {
  3.391779529203245*^9, 3.391779531374827*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", 
    TagBox[
     RowBox[{"InterpolatingFunction", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"0.`", ",", "1.`"}], "}"}], "}"}], ",", "\<\"<>\"\>"}], 
      "]"}],
     False,
     Editable->False]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.391779496487501*^9, 3.391779533139003*^9, 
  3.3917795720758257`*^9, 3.391779702455825*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"var", "^", "2"}], ",", 
   RowBox[{"{", 
    RowBox[{"var", ",", 
     RowBox[{"-", "1"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917526917713223`*^9, 3.3917527009442883`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", "0", ",", "1", ",", "4", ",", "9"}], "}"}]], "Output",
 CellChangeTimes->{3.391752701370462*^9, 3.391779577225596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "+", "y", "+", "z"}], "\[Equal]", "0"}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"y", "+", "z"}], "\[Equal]", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y", ",", "z"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391752706560957*^9, 3.3917527286460133`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"-", "2"}]}], ",", 
    RowBox[{"y", "\[Rule]", "3"}], ",", 
    RowBox[{"z", "\[Rule]", 
     RowBox[{"-", "1"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.391752729229083*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DSolve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"x", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"y", "[", "t", "]"}]}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"y", "'"}], "[", "t", "]"}], "\[Equal]", 
      RowBox[{"-", 
       RowBox[{"x", "[", "t", "]"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}], ",", "t"}], "]"}]], "Input",
 CellChangeTimes->{{3.391752796444211*^9, 3.391752822531838*^9}, {
  3.391779637666869*^9, 3.391779644875643*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "+", 
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}]}], "]"}]}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"Function", "[", 
      RowBox[{
       RowBox[{"{", "t", "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"C", "[", "2", "]"}], " ", 
         RowBox[{"Cos", "[", "t", "]"}]}], "-", 
        RowBox[{
         RowBox[{"C", "[", "1", "]"}], " ", 
         RowBox[{"Sin", "[", "t", "]"}]}]}]}], "]"}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.3917528239054737`*^9, {3.3917796395282393`*^9, 3.39177964527705*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"r", "=", 
  RowBox[{"FindRoot", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Cos", "[", 
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", "y"}], "]"}], ",", 
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"2", "y"}]}], ")"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"x", ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", "2"}], "}"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.391752865042231*^9, 3.391752890365999*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"x", "\[Rule]", 
    RowBox[{"-", "1.5280048226806118`"}]}], ",", 
   RowBox[{"y", "\[Rule]", 
    RowBox[{"-", "0.7640024113403059`"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.391752891590448*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "/.", "r", " "}]], "Input",
 CellChangeTimes->{{3.391752895091587*^9, 3.391752898429078*^9}, {
  3.391779715018004*^9, 3.3917797180246277`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.5280048226806118`"}], ",", 
   RowBox[{"-", "0.7640024113403059`"}]}], "}"}]], "Output",
 CellChangeTimes->{3.391752899094056*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Cos", "[", 
     RowBox[{
      RowBox[{"x", "^", "2"}], "+", "y"}], "]"}], ",", 
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"2", "y"}]}], ")"}]}], "}"}], "/.", "r"}]], "Input",
 CellChangeTimes->{{3.391752901297673*^9, 3.391752917846116*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "5.2678402005096325`*^-15"}], ",", "0.`"}], "}"}]], "Output",
 CellChangeTimes->{3.39175291925945*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s2", "=", 
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", "2"}], "+", 
        RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], ",", 
      RowBox[{
       RowBox[{"x", "+", "y"}], "\[Equal]", "0"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "y"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.391752940618414*^9, 3.3917529569352217`*^9}, {
  3.391779816981369*^9, 3.391779817857938*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}], ",", 
     RowBox[{"y", "\[Rule]", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     RowBox[{"y", "\[Rule]", 
      RowBox[{"-", 
       FractionBox["1", 
        SqrtBox["2"]]}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.391752957685278*^9, {3.391779795856165*^9, 3.39177981876061*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"x", ",", "y"}], "}"}], "/.", "s2"}]], "Input",
 CellChangeTimes->{{3.391779800590049*^9, 3.3917798210970097`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}], ",", 
     FractionBox["1", 
      SqrtBox["2"]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     FractionBox["1", 
      SqrtBox["2"]], ",", 
     RowBox[{"-", 
      FractionBox["1", 
       SqrtBox["2"]]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.391779808649547*^9, 3.391779821527281*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "2"}], "+", 
     RowBox[{"y", "^", "2"}]}], "\[Equal]", "1"}], "&&", 
   RowBox[{
    RowBox[{"x", "+", "y"}], "\[Equal]", "0"}]}], "/.", "s2"}]], "Input",
 CellChangeTimes->{{3.391779837866534*^9, 3.391779850994363*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"True", ",", "True"}], "}"}]], "Output",
 CellChangeTimes->{3.3917798516912746`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Solve", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "-", "y"}], "\[Equal]", "1"}], ",", 
     RowBox[{
      RowBox[{"x", "+", "y"}], "\[Equal]", "0"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "y"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.391779858391966*^9, 3.3917798739393187`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"x", "\[Rule]", 
     FractionBox["1", "2"]}], ",", 
    RowBox[{"y", "\[Rule]", 
     RowBox[{"-", 
      FractionBox["1", "2"]}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{3.391779874799432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Exp", "[", 
    RowBox[{
     RowBox[{"-", "a"}], " ", 
     RowBox[{"x", "^", "2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.39175414191604*^9, 3.391754160491774*^9}, {
  3.3917799239922113`*^9, 3.391779926512526*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}], ",", 
   FractionBox[
    SqrtBox["\[Pi]"], 
    RowBox[{"2", " ", 
     SqrtBox["a"]}]], ",", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], " ", 
       SuperscriptBox["x", "2"]}]], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
     RowBox[{"Assumptions", "\[Rule]", 
      RowBox[{
       RowBox[{"Re", "[", "a", "]"}], "\[LessEqual]", "0"}]}]}], "]"}]}], 
  "]"}]], "Output",
 CellChangeTimes->{
  3.391754163113706*^9, 3.3917798916041*^9, {3.391779924701706*^9, 
   3.391779927130555*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ssq", "=", 
  RowBox[{"N", "[", 
   RowBox[{"Sin", "[", 
    RowBox[{
     RowBox[{"Range", "[", "10", "]"}], "^", "2"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.391779979851239*^9, 3.3917800053884077`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0.8414709848078965`", ",", 
   RowBox[{"-", "0.7568024953079282`"}], ",", "0.4121184852417566`", ",", 
   RowBox[{"-", "0.2879033166650653`"}], ",", 
   RowBox[{"-", "0.13235175009777303`"}], ",", 
   RowBox[{"-", "0.9917788534431158`"}], ",", 
   RowBox[{"-", "0.9537526527594719`"}], ",", "0.9200260381967906`", ",", 
   RowBox[{"-", "0.6298879942744539`"}], ",", 
   RowBox[{"-", "0.5063656411097588`"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.391779997262258*^9, 3.39178000646819*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot", "[", "ssq", "]"}]], "Input",
 CellChangeTimes->{{3.391780010364987*^9, 3.391780022356378*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, 
   {Hue[0.67, 0.6, 0.6], 
    PointBox[{{1., 0.8414709848078965}, {2., -0.7568024953079282}, {3., 
     0.4121184852417566}, {4., -0.2879033166650653}, {
     5., -0.13235175009777303`}, {6., -0.9917788534431158}, {
     7., -0.9537526527594719}, {8., 0.9200260381967906}, {
     9., -0.6298879942744539}, {10., -0.5063656411097588}}]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{303.2, Automatic},
  PlotRange->{{0., 10.}, {-0.9917788534431158, 0.9200260381967906}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.391780023133397*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", "y_"}], "]"}], ":=", 
   RowBox[{"Sin", "[", 
    RowBox[{"2", " ", "Pi", " ", "x", " ", "y"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Short", "[", 
  RowBox[{"data", "=", 
   RowBox[{"Flatten", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"x", ",", "y"}], "}"}], ",", 
         RowBox[{"f", "[", 
          RowBox[{"x", ",", "y"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", "0.", ",", "1.", ",", ".1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"y", ",", "0.", ",", "1.", ",", ".1"}], "}"}]}], "]"}], ",", 
     "1"}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.391779586762151*^9, 3.3917795878367977`*^9}, {
  3.391780069208653*^9, 3.3917801374217043`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "0.`"}], "}"}], ",", "0.`"}], "}"}], ",", 
    RowBox[{"\[LeftSkeleton]", "119", "\[RightSkeleton]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1.`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"-", "2.4492127076447545`*^-16"}]}], "}"}]}], "}"}],
  Short]], "Output",
 CellChangeTimes->{{3.391780138611479*^9, 3.391780162589246*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ifun", "=", 
  RowBox[{"Interpolation", "[", "data", "]"}]}]], "Input",
 CellChangeTimes->{{3.391780201528223*^9, 3.3917802061867228`*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"InterpolatingFunction", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.`", ",", "1.`"}], "}"}]}], "}"}], ",", "\<\"<>\"\>"}], 
   "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.391780207236697*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"ifun", "[", 
    RowBox[{"x", ",", "y"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.3917802135977383`*^9, 3.391780226710298*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFnQd0jtkX7iN6770TvbeMUfLpRInBGCVGH20kuui9jxqdUUaJ3okWogtC
okUIIVWk6nXI9Tf7t4/73mVda1nf+p5v57znPKftc96zn1O895D2f9jb2dl1
ymBnl/Lr5z+ddx2dU3GEE592dtle7spUov6gyk6rSzkftIH3LdagSkrHXk67
Y+4nOzifU3zytBD3uFrDnBxO5Kpx1O2a4pnmDL819OZYpxsXyxxycL6l+P4s
rit//mmq07zKF/3dQoIU7z4i+q9Bs2c6NVvZO9rbLUTxDEPHFk16MNcphd3/
/j1R3N6uwR9Zai506nH4xnwH53DF34WHL7jTconTqQHr8jt7Rio+KuzGtNip
S50KFh7s5RYSrfiYsZdiD5xd7jT2Zp0ang7PFJ+z5M3e95lWOd2bmf6Mt1uc
4g6ujXdn7L/GqVad4NYh3gmKj/xtqc/R2387LUn0up+cnKT4+ulpxz/+bYPy
C692dlW/8cl3Phv0K58178CNNngGTy5SpmZsv/02eAbvVu7huazLj9ngGXxk
iQW/je9+xgbP4J5258/1dL9gg2fwCWnCKv4x1s8Gz+B70zR8eGOSvw2ewV2C
5r747BRog2fwdVOGR9are8sGz+BxLp3bfKhxxwbP4Fk2vp6Ut1yQDZ7BP+fq
HLSwQLANnsFzeG1oNjDdAxs8gxcKSvX80EvTbuDva1m+tU/swOGT73wGz9iW
2PQrb/AMvn9M6J4gDz/lGbxI3SzDLtUNVJ7B2xbNlGJw+TvKM3jc55Qf16YM
Vp7BszyI+Lno+RDlGdw9KvrMpb6PlWfw44s8ZtYbHqY8g1da/7tD3qIRyjN4
+qNLBnzwjlSewQ9ff7nw/U/RyjN4m+Vpdjbc+FR5Br/jcnpt6sQY0x+EJzu7
nt/6OzyDd5f2yd+Dwyff+axdZkOnnbVuKc/g+dMfONI8VbDyDH7oycypL1Y/
Up7BD59rv8Z7ZJjyDL59fINp6V9FKM/gj+/ER4Y1jFaewQd/eLbRzzVGeQYf
61bRd3/dWOUZfMzdTUvtH8Upz+Cj/rXtvlw3QXkGf9nk+bmHvyYqz+CRji8L
NCxlxhH4+Mrzt/ETnsFHSX+HZ3DaJ+mC5xM++c6nV7EXvc72f6w8g1+5snvp
hJIRyjP4rXbXR29oFK08gy84UyF1qVTPlGfwzY+u7k/XLU55Bv+Yporf3gYJ
yjN4LqeWn3PtTFSewV/bbXD+sCRJeQbPM6RIpaGvk5Rn8OapqvTvF5ikPIP/
VSpbqu95ptx2doHf5iN4Bmf8hGdw+js8gx+U9snzwOGT73zerPOgc6Z/o5Vn
8Glrwm+cqB+rPIMHeNyxFbkdrzyD9xq8pEr+r7zBM3hprxZZ/ziapDyDv61Z
ZmvOr7zBM3i9fTtTJP5ueNb89yq//8F7057BJ50slGNlQJzyDD7m/B/tvh83
KN/X9vxtfodn8IkyH8EzeLyMn/AMTn+HZ3DaJ/kAh0++83m0d0af7g0TlGfw
Hv1dgkpVS1KewSsljWk2+n2S8gzuvSFrjbyehmfwl4c3vk5KYdozeFzr+zH7
OppxA/zkyEwf8217qjyDZz7S5erqghHKM3j2vSlsDY+YeZBy2NkV++YvwTP4
Hpnf4Rk8s8xH8AzO+AnP4PR3eAanfZI/cPjku8nn//49V57Bfxd7eAa/JunD
M/gcyQ88q/8o+Ydn8I/3/ysvPINPFn7gGXxY8tY+/+MTnsnv19+++Z/wDI6/
BM/gzO/wDP5E5iN4Bmf8hGdw+ru2V8Fpn8q74L9b2jOf3aOX7OzXNV55Bo+d
2Wbi851PlWfwnONCPDcODVOewUsmFK05scQd5Rl8+N7hUyt03K88g1+usatx
9mF+vvAM7rR77ALbkRBfeCZfX8fnb/48PIOvF/8TnsHxl+AZnPkdnsE/yHwE
z+CMn/AMTn+HZ/CrlvEZHD75zqd9phIVzyx5ojyDN2lReMyNnwKVZ33uk+6O
s3pt9IVn8P1xXu3KFb7jC8/gz/7alDltk3DlGfzKytE+qRJjlGeeb2e3/9v6
CJ7BY8Wfh2fwiuJ/wjP4OPGX4Bk8t8zv8AzOfATP4Iyf8Aw+x+JvgNM+KSd4
U+GT73x2/uh7377bfl94Bj/U/p/ZPT/fU561XEm50qU/HKk8g49/NaXX2i5x
yjO41y/FbzYolaQ885yvY9639SY8g7M+gmfwdOLPqz8qOP4nPIPjL8EzOPM7
PIMzH8Ez+CaL/6z+r/R3eAY/I+2T8oMfFj75zufxlE2X75kYpTyDvy9358by
tvHKM3h4y2s1v5xKUp7Br3U+1LHhdzyT3ld/49v6HZ7B/5X1JjyDsz6CZ/CR
4s/DMzj+JzyD4y/BM7iPzO/wDM58BM/go2X8hGfwA9Lf4Rmc9gkv4PDJdz6z
16v4aMrJJOUZPOlQj4eXdyQqz+DH4tv8nOa7cYO/s7Pb+G0/BJ7Bs8n6HZ7B
XWS9Cc/grI/gGRx/Hp7B8T/hGTyL+EvwDD7Bsr8B7ifzETyDx8j4Cc+ajvR3
eAYPk/YJX+CJwiff+ezsXLRx1rkxyjP43gy3vY+8NPMgv38tzLf9JXgGZz8E
nsFZv8MzeISsN+EZnPURPIPjz8MzeFbxP+HZ5PNMn+/368CZ3+EZnPkInsEZ
P+EZnP4Oz+C0T3gEh0++a/qTx6x4/Nu+01HH0/iXdt5k43NliVX14wdOsYUl
j/E/6nZS8UwbSmTPu36VbUA7j/zuIZcU/2lag4nPp22xDc3epfRXX0Xxfzr9
1CryyG79TnpZJB2+8+m5xC3g2fCDmj74ho2Zc/U6dFrTB5+fbfcvt4Ze1PT5
u9qSH+zASYfvfK526OnrNvaKpg8+vkCt3RuO3tT0+X2jlIv0wf+S/PD34BMk
ne0VNo11cI5VvO/4kj+/PphoS/NkaBpnz3jFq/tPXPl2bJKtzzLbUreQRMWf
3wwOavogybYwi+Ntb7cIW8Vxb23OnndsN+wOLTtfMNEWfy5VzxDvKMVr5nlc
NaJTkq2lx+345OSnirttqrzvfHyS5gf83r1066bfS9L8gD+eXindn/lMfsAX
Zrp2Ld/hBFvVrv2beTqE2WLCl3bxdLhv+xhcbW/LlCaf4N7J2UYveZak+QQ/
Pz19wdU3TT7Bc4ybXuapT6LmE7xipcEtJx2O13yCJ/7mucve75nmE/y166Lm
R7JG27a0qjYixPuRfv767uXLmU5Jmn/wBevi7jX41+Qf/C+3A25VO5v8g4/M
lyZr2k4Jmn9wn7KXm/hli9X8g9+73evy2p2m/Dwf3rADJz9857NEljTFRhQ1
+QSPjR7QYtzYeM0neKqsXT6srRSj+QRPGRnafu6kcFOvkl6AtCvyCX5U6pF8
gsMP6YKTH77zeeld1SUXpz3VfIKvfP9s9gz/J5offq8h7Zn8gF+Q9kN+wKkX
8gOeUnjgeeAr5Lm0H/AZOwuVa9o91pf8wB/9iPyA55R2S37AaQ/kBzyV8E97
Bn+daWDvm0lxvuQH/EaVQ//WmJrky7hA++oj4wn5BA+Sfk0+td9LPyKf4LRP
vvO5Krno6JjB8b7kE3z2iin1hlxI0nyC+2b+t1PzuETNJ3/H+EY+wUNlnCGf
4PRryg/+SvjheeDkh+98lp9p323KkkTNJ3jXPVPePdgUo/nkd8Zb8gnOuEc+
wRlnaDfgtB/yD049av0JfkZ4I3/g5JPvfDps6pLrS1iIr8674jf5lq4ztaFj
O/WX+L1xZNaHuwYu1u/8Ds7f87udXbFv6eBfgT/e9qlhnoEbdR4knfGNN6dt
9Pd2zR/2m4pG9mj11vhh4P3T1NsyIfN1/XvSmyDpYMfzeS58Mt8uPOa1qX7w
U8WpzwqpXVsfn52g7RL7IrY8g0d7PFMcPzH0lfeGpGWm3WDfot3KhM9xpp1h
33rwu64/3UzQ8mK/dlv+mS1qmPrD/u3s+p86XkrU8Uf9mvW5f7+UO1Zx/NMa
ryJGD/ndjOfYx2Z8e7nVv3GKY/9Tv86ZbanNviv2oX6FBhwo9904IvbV6/TI
80dls87BPu3j0nWLljR+gr53TZzxJsMd469jvzo6V8XiR43/gP2kU0UjG74y
fif2CdW8R2WMMH4F9rndX9pf+MvMI/S/IY8TvY44mf0l8LcFJ38+1MCM8/jv
5UuEPnofZPaDsE/RrOexujcM/9iXGV/sVUhLs3+B/dh9u9NvPGrmfewD8xbO
UPS5WYdjn6dOhfJr3xl/BvsSdh9qvDxneMa+1bRjSx/MNzxjv7hlvYwBFxKV
Z+zX+ZzJsWecGb+w739jR84Pn+KVZ+xPdtjaqvRF0w6xL/tr1Ozio4xfwniW
6WA5j8plzL4weMd5HfuH1zDzGuuh1BM3LzzVLVHrBftm/euHH1xu6hH7moXC
PMKOm/047J3K97uQ7rPxZ/S9htvG+qfiTL2ov3d2R90z/Uy9YH/p0aOJhxNN
+8d+yl6PQuuDjJ+m7ynSn7/a/3q81gv2N9L8mlSiS5zWC/ZbT6Xdf/Jvs+7F
PvT3WW8TUsZovcDT4sjCr7f/angEzyg8ky54KuETe+oB/vmOfeCbvqVvXTX+
D7/fFJx64fdB1WrdKR9k6gV70qFesO9VYuX0tlNNf8G+veSHesF+vt/QltlD
zLiEfetqzwa1yWv2ubDv3D3M7ddkM27rexCnA1dcNph+SH4ZB2jH4PR37Ck3
4wM8Y087hGd93yXtlnxgb+VZz4kIn3zH3tZ8h0+/lIn6nd8bCA7P/J60uUSG
UdPN+I99cIZmmWbXjVWesd86JzCi76Qo5Rn7Lns8Etsdj9RxlvSYXxhnwZlf
4BOc8RA+9X2UjJ/wiT39FD6xp1/DJ/btLeMJ9rQ3yoM9PFB+7BOFN75jX6vb
o74LfjPf+b2m4OrPye+/vL8Ws9r1ifpX2B/49MtG+6Ao9Q/hm/kXPsGZf+ET
nPkCPnWfWOYXfe8r9oxj8Ik94x58Yk//gk/s6Y/wiT3tBD6xp10xjmG/dev4
sbWPR+j+EvjSES6Hn7d7qv4q6RSLzvWhdkezv4d9mqCMUaUuxivPap933KJp
2xJ88Z8YD/Dr4B8cvw7+wfFnsGe8eST+D/WCPfOyzvdizzxOvWD/QuYL6gV7
5hfqBXvGMeoF+y4y7jG/YF9nXI6OLk3NewHw1bXzXxn0IkbXC6Tj7tt+bdtW
z7ResP/t4pvQpDJmHYF938zvQ99MMPvb2A8ssHzsV39M6wX7Dee7/lz/c5LW
C8/Hf9bzRoLjP1Mv4PiN1AvlSyd+JvWCPf6P7k+JPf4S9aL7KzIvUy/YB8g8
Tjmxh2fKCQ6f2JMO/PNd18ulakZGrUjUeuH3YMGpF3539s0Z6x9l1qfYO7bp
tr/eBfN+B/v5Sc1flP6uv2AfcfXm48C+8VovpMc6hXoBZ51CvYDjn1Mv5Bd/
nnrBvp/4mdQL9n+LX0o7x97q/2CPv6TjgtgzzjAugDOeYE86y2T8oR6xp51T
j9jTL+ARe/iHd+ypL75jP+Xatn5BVcx+CL9PFpz60vdLQz9UmHspQtfp/L5R
1sWsu8G/jiELnXKsd6J+wVlXUr/gb2RdiT3tKHO9OdP+5/9T79jnknUW9a7j
tKzLqHfsWS9Q79ifkPUF8yj2zKfMo+D7ZT6lfsEZ/6lf0me+oH6xXy/jEvWL
PeMY9Ys9/YX6xZ7+RT1hHyz1hR14eOnKE6Zkvq71q++VLDj16eEX9a0eySf1
5tWxZ/7+ucz7G+oti9QX7Ypx7lr/4lmHj4vSvye9bZIOdvydv9jT3vQ5st9C
eXnu5ecxs0cuj9Pv/A7e7a+Gycfcdumn3eCE83dHe9rOBN/92y0k1rbhzzOD
PR1u2hYXGdWi7YIkW5EFW8p5OiQo/rfL72PSPEuyjWs4wtvbLUnxqNClx/pe
T7KlGlp7uoNztM31zu+zQrzv2tKeGHIj+UGSrbdD2mzOnjGKb0k9e27RyCR9
LvjVJoVu+FZJsrVIu3ZgiHeYLW/9TxscnB/YSp4ZVdVtV5LN6+TAt8nJEYpv
OZmtxPy35rngN90rTZ9d0TwXfMaw2VFP2yfYbm9dddwtJFQ/n7vv3/yXv3ku
uO1alv2Hb5jngkd33OUb3zFR0+XvSkg+sQMnHb7zuaBZYFKazwmaDs+hXKQD
znPhi3LDM+mAwwP1pTx1WXP8ROsEX9KBJ+qFdMDhjfYAHly4+oc/OyX6kj64
T/Sn3dVfJvnSPqjnRdKueC449c53PquWO5C6wcpEX54LvuzP001W3UzS54I3
Ge/qN39xvD6Xv6Pdkj9w8s/fg5M+3/n8K+vSiM9lTfo839r+weGZ54LDD88F
J/8PAldWK+fsaeNzfuyfTpUG9dR+C1650pX+0evH6Hd+ryh4YvX6EcnJcdpP
+573L//mimkP09wjfEO8r9vWXHrT8dqaJFvrpxmHOjgnqn34sBTzGsYm2apf
3XDF2+2p7XPRRR+83W7bAibXjlk5zfAJvsCh2qAegcaees7hUnbFz1/98MWT
3H8L8X6m9v5p9m2Y/d7UH3if933ntP5o7EmnSGDMwxv/JGm5sO8wNCKwY5AZ
r8CPpZsUd3G+KRf4Ttc5LX0LJ9lG97Lf7xYSbjs+p2JOO7tg26QdR/JPHmX6
O/iYDm0Xhd8x9vSP52PiypR9nWS7k/tmPU+HKLWvVrhatgUfTXsAH9479t9T
0caedPqfWtdh8SHDG/Z575U6k3mV4Rm8d4X4bn2zGX7At3Roc/HYL4m2fHtq
lHT2fGIb9eJKRWfPh7Z+92/0z3LBjD/gc+e8+3D0az6xZ7zZ2m9axajPprxq
/yz+1z+fGH7AU/fsPff9cGNPOtlLuIfGNjTlxd7t3On8dw4n6neeTz75e3Dy
gz3lsOafz/mf3v7S0s+UF3zAp6nXXpU09vwOTv75/eCI4Q4N8yQqv/xOO6H+
wGkP2MMT7Yf8Yw+flBc8m/CGPenAM/nD3ppP+KYdkk9w2hv2tFPaJ8/Fnvqi
/9BOGQfon+D0d+xpv4wPPBf7PNLOtX2LPe2c/ot9qVWlzp5NSNDxHzz17zfv
L+yU5Is96eRu8nbVz5uTfMkP/ea6jD/kH5xxBnvGJ8Yl8on9Zul3jEvgy6MK
34hZZuYv8JL7K53c75/kiz3p92sxKF3iKZN/7GMqnDhx9rOZ78BXpWniWiK3
sSedXNMcPQdeStR5iucw/lMucMZPcPLL+MnzsKdcPA/8D8m/8ijplLCUl8+l
3evZlvmaeRbcPXnGxH1f532+8zs45eX3Zva1buRsYuZlfo+Q+Yt5Dv6Y7ygv
9swLtCdwB2lvtCfwXNKusCd92iE8YP9U6hHeNB2pL+xJZ6XUL+XEnvKyPmH+
t7NbfNbdsaET9qwXY44/zZn5vXl/B0+efuOCVh0y/gDryCJzo/J/DDP9jnRK
3qqyp+1Bw4++Vw+ve3HMPTNPgW/NOGXh+O/mffBm9W3l0iWYdFinDi+bL03a
cOMPYF9pcaVBQ46adDTOKPvvdb/kNeM2+xObs6Udtv2ymafA1xQu/qniJzMf
gW86dzqgfJJJh3XYSM83q09/MvO42mcotaXLFpMO9jua+g6b42z2dRnXazoV
npj7pRm32V9p+9KnwORE8z6C38GZn/j9dsqvK8jXJp/gq6unKtN/k0mf59eQ
57I/TH4aD/Pwy/odzt89H1k3bPR0sy+n66E/ndOODzfvBXg+PPM87Lv6Z64+
ZJ6Z13gOz+V54DyXeYd97venSqc8/M7wo/kRHsDJDzyQf+r/hs/RK45+Jv/g
tAdw6pP2QDuj/kffOb0y5r3ZZ6b90v5JB3vaCf0OPLR7vksNqyX6kj795nrg
kgORK0z6ui6TfgROP6Af0U/ZT3AvE/D72xdm3xj7xTanjCN/MfuTpF/+jUuK
1YfM/EI6jp17jlhxy8wv7N9cPLDzY6Vks89MOhcWHax5Mc7gPHd273d77u1J
8mUcoX8fzFuln3uMKRc4/Z39H/CGT9tXqtPajId6bsi99/yaLmbfj9/B2Qch
nZEDH7muHmrmHf4uk9vzFBvemfKCv+7a2t5+gXku+fp70dLzARFmH5j05wyK
efEk1uD8nWPguX/f/GJ44PkVba79M0abcwjgN16uKdCtnplHtD6lHqkn8ku9
kz/ScXzSZcQjVzPvkA75VL7YR5V88lz4m1o69N6GlM+VZ9LPLLyBkx94Y/6l
3Q3Ofy/sf/MO8w3tjnlH41UErxT2ZnuKaYm6fwi+rNDnUxOPJOm8TLujHZJ/
8DnSDum35Cfg4cXTX/OjfJI+7Z90NB630tBljb72X+Zd5uEt1Q99m3/5e36/
38/ueKoEH033UupmXp4OV2z5o151z/Q6QXGN2zh7fHDJ96ZfMV+3yTUo7NNJ
g9OOZi6+Ndqlr5k3wQ9J/9L2JDjtjfJQP9QL+cE/apLyt5595ybquIm//Cj/
LZtfTjPPMp61SBl7z3O2Ge/APWT8JP/gjHvkH/+6U2STNXm7mHPw5Oed45Sc
X/nX+YDxnnmK/Gj8t4z/5Id5plvn2mlebjf7gcxjzNfMQ9gzH/Fc7F1lvmOd
xfy2fc2U9ceLmPkIvHCuEzVOTzLzJjjPhV/mte2/Vcm7fZB57wk+IvPII6/s
TPrg+C2kw7xWwbF+v/0LzbwGvq9r+0mNH5h0wPFnaA/0S/oj6dCf8N9obxoH
L+MY9ajrR+l3pI89/Vr3o6X/Dd07fsxvNUzch66PKv2V3fm791zg+Ie0K12X
FcnwR5+BJp4IfPL8f6u5/52g4yS/N5J5h3EQe8ZDyqvvAWW8pbzYM26Qf8Zd
/HP6ha4jc1y9mb20eW8CPvHLmcNjpyVo/sHXynxE/skv8x3jEXw/lHGJ8UjX
I6dapO3snqDjAvhVOzfXRp3N+EU6jGOUC3vWC9QjfLDuoD9in6FRlnkFX8Tq
eyXwv249q/NhVbwv9qSDHwU/2F8Q/wQ+sbf6OfpZ9E1UQp7rvpxbZTx3WhiR
+kHgQKfSK0MOuod463g+tHFW+1ozZqgdf2dnd+abPfmAJ/gEh9drwif1Bb5s
29snBzOZ9TzzZINZx/+unGjWvdg72kVWur3Y+FvwTX/R9sd6UPoL7ZZ02ib2
aT82OVFxnjt9bnimy2uNnwke53Er8MM1M94yPm+unCV//IkExfHvMs6IqZZ5
XKKOL4xPjEvgum906MFtR49EHdewZzwEp98zHtJOSKdS079HL8hqcPIzcfDV
j+UWmOeSDuMhPPPc53tcK+xaZPjXc21XDxe608nwif3eKWP+Gn3O1Dt4xepN
Zqa9Eq846ewd8eKn0YXMvMY86Jxih1vvhwZnnVEgz40D1X416ynmH+YdcMZ1
5h3GX7W/6OMztKfZXyP9Zb5/DhmX36zjmAenjah14ue6BmcddnDrx6JTF5l1
HL9jT3koB+WCF9pLqPgV1Ac4fgX1Ck57A6c+e0n7gV/wo4My5XLMZ9KhXdBO
yD84fgJ8wRO8UY/Yp5dxDJzxjHGM/sn4hF9H/wTHr6Nd8Vz7NkNjiuyO03kH
v/XCogF+1UsnqD+v45/MI+CMl5NkHqH/6/s1GX/Adf0i4wz9H7xagXLPT7Qz
9Us6+G/UL/b0I+xYNzR9vtRx3MYE9bf5fYXM1+DMe8zX/D32pEP+4clFxjfy
T/0wjul7JrHfJ/2X9gPe+VqlLntvmHar/Vj6NfWEPfWFf8+8EyR+Pu1Q3wOK
vw3O/PVW/F6+Y/9+1rkLaaee0nlNdRG6BGe5cGi9xt8yH22als/2v3SYz/jd
P/Hfl8lTTul3fr8uOOnTToeuy1j9TDczf9Ffq7ls65D+D9MfGH8qrpzW9uJU
wz/9wqlsu4xXrsfrvKXvD+edGZiprOkX4LNXjPZp/dyczyBfX33pb+XVuA6p
l6zl1qaMWmTmY8oHD/w9OHxSfuZ/5n3dF5bnkD7loXyUi3xTPsoFTvkoF/2E
dKpK/2L8oj0yjuk+guC0T903lHGY8ZnxnXGYeYS/Z1xlvganPifIvEm96rwq
9Uv6lG+5zCOUh/aCP0O70ff+0n54Lnwwz+o+tZQb/wR76of5lPERe8ZJeKf+
h0l7pp74u7oZXm6aP8qMh5RrlcvCygVTfhf3K7hD3LMMRysl2DKNG5Iphd1+
jYsa5nl+QeZjf9tcamYc8dVXVNznzPufMh7ZbVuxK7SHnZ2ftuu3UfmvF1k5
2gkc+zFNO+85O/2IbYg8F/vD7ZfZvSw6yQkc+2I/ffop5Q4fW87r5wrZ2d1R
+6G/Zn3V6u40J3DsT3cs3mNY5FnbURnPsZ9d/dr+Vn/PcgLHPuO0lo+KD7to
c22yIr2d3UO1T9uoerqc/eY5JX/791jx5GTbN30n7ElnSprrvXN89LNhD75L
dA9uPar5KTk5TNNZOWtc+IlUS5zAsX/Y6edGeb4E2LZIO8b+TtjS1KVeezqB
Y5/ut2NlKvnctI1evf5FcnKU0eHceKXk5WfLnMCxn1/c3uvg6Nu2FtI+sJ+U
OrR1x6crnMA1ns6jdL85le/aCnRMF5OcbHQ7i516ed03cZUTOPbRccdtWyKC
bPHS7rF/06XTfkf7tU7gqsP5YeDw1CuCbaezDQ9NTjY6ny9flhnWpeQ6J3Ds
s7f2X3uw6QNtn8TljV51PHTL4d3aPsFTZk09ouQ2H22f4E6PyvVr4H5R2yH4
SI/Plw94+Gt7A983NPPsJkduarsCf52nZfLRYne1/YC7fUjuNX98sLYH8Eyi
90W9q37mjDSBS56Har2De8xxrNfMPkzrF/xM58tlm04K13oEX7PTo1m6uAit
L/A5Rd/m6dI8SusFfLXv0bsZPKOVf/AJ8+uX/XjlqfLMfBE8s+QXt2lHlGfV
mexx7uO0wReVZ9WN637CPfXzAOUZvEy+7Wk+FLqrPIO/uF+sd/9CD5RnjYu8
0sY9MCFUeQa/OfaXd1MuhCnPer5R9HPgGfyo88rgNO+jlGfw5vtjX7jcfao8
g7+aevvQ8dnPlAfG3V3hHQp13uqjPGgcwD+1J7cY5q88gN//9Kpu3vx3lQfw
R7lu/pXKO0R5AA8t9W+pk5+fKA/gV+NGtm76tX7hQc+5F11dNnBNtPKguoui
1wQP4MkffqubKXuc8qDxjxPnFs0aEK88gFd6+OvckZUTlQfmvVWjxt5d9uSs
8gC+wKN4/nV7bioP4BVrdx5WNNsD5QE826OfdtZ5/0R5AK9wZ93Eg8silQdw
n/bd3nr4P1UeNO4yyK5+/8WxyoPu04o+GDyA31rtULDdKFMu/IKE8x9P1B50
UcsF3qBo0X/Cst/VcoGvern9tNPtUC0XeKMMi9PtConQcoHnbHP36JUzT7Vc
Gs/kX/Hq5i8m/+DdRUeO/INPqRTmNSYhSfsvePvVX7aMGxGu5WK/drN98fpv
Ev20XKpXl+pVs2q9g7Vc4BXSNPYfvztMywWev4h345Xjo7Vc4E1SVxh/bpjJ
v1VvkPyDP8pfecbV35O0HYJnS7G8w5TpCdoOwYvcHdtuumesjm/g5SWfjG/g
XaVc8AO+QniAH/bLG859uKueu7/yA+71T9YFv64NUX7As/1iG5HDP0L50Ti7
+yEt39yIUR5U989Sj+CrTufd53UhXnkA7+t35ULdVzHKA/iCjYtXlnoaoeM/
+MGhcRUfTw1RfrRcA9125Krrr/yojmLklhSfexRWfsDr1V72xekXf1/44Rx9
8YyBj3Y+DVB+wH3etU1R/kSo8gPul31DnpoXopQf8GpT5h+ue8O0E3B/Sz8F
d78+bWP2XjHKD3ixw5P9So8MV37Afw6qULHa4iDlB3xN8KbedTv5KD+a/5Q+
bwpuPesLP+Beo7PMCP8pWHlgnRSxvWrbcV/HN3gAn9TgxYzAR0+UB3Cfx0VK
vVv8VMur8XGW8VntT+Xblv1ruSgveMtD00tWCL+j5QXv+aRMcP+au7W84KXb
ZXfqlcvfl/KC15l9p0CfmaFaLvZV/vxcxfd1n9taLvAWj1p9+d0lXMsFnnnQ
hJK+lZ9pucC3WeZf8BFZKiYmrQnScoFXPTjG9+6nXVou8HbzNzk9mhngS7nA
pwbNi698+onmn30V73KuVevnvav5B48ulKJZ6z0Rmn/wuAyNU3RdE6vzCPjV
kgNv9Hc38yl4Wov/Bv6wqePe3BV9tFzgazO2npevuL8v5QK/26tb389HTP5V
D63YiE7dLgdp/sF9IjsPcPoQqfkHv3lx5wqXpvGaf/Bts56nLfy38Ys0Tsqy
HgHvvXuPLffts77kH7xp7Wc+FUeGav7B5+Rc2yOkQ4zmX89lFP9rjvfKYM0/
eHjHgIMPqkbrfAfea068Q8Vy0Zp/8DOzOtZa7WT85+902Pr9b/1F/sEbD1gx
caVTsOYfvFOZdJMrlIvWfq1xRrfu9AqpGq3557NBoeIvpm5ZrfnnXPqZS0Pe
D1nopfyvK7ElakiIl63d6O42n927dB6ss+lW35Nua239ply8s3TrXi3vCdmP
WWDX1HHg2O1a3lFfjv9byXma7e3m9BUfTPpby9td1jtrLfVlL/k82yH/5v/N
U5S3ieSz8R/2YSGdr2k/mi753N7z4rz3Da7o+HBB4nKWnc4akq/cJR0PM0j+
60y8mCIh5zmdL+ZJ/hPuvvjZPd0J5WviwuHHPR3O2nra96haYu8u5Y3PjW26
B51YeVx5q3+4eZeH3qds/U78m6POP2eVt4mtdtqWOhy3/ds6LE9o1yvKWxHZ
v+pky7Voxa/XlLfT4ZlKt/Q8bCv68FRHO1d/5c1L1i+pLP10jOSzRP6FQQUa
PFLeWkg+C19f3qRA3VDlrarkM/JN0fM5T4Uqbzflfdng0PpZ3waGKm/DJP91
viwssGN6qPKWQ/LfquvFNxkjH+k8e1jyH9fk5IxH9o+Uzzc99sQ7OF+1uVS5
HlbOzqyz2P+bvOXl2vMx55VPPjPt6zT+aS2zbnV8l/V2iPdFW/X8dVfmsd1V
PtOs2z7f2fOCLWDMyzYVH9xTPoMaNWx21O28Leu6DiGxyfeVzyKyDtpsGc+f
Sz4feySsvVfLrKfOSD6Pd/L/ZUi1aOVzseSz5Zo55Uo9j9byeud7vSjE+6Zt
y/o6f41yMOsp9rH6NO67usrrq1rO2afnOzt7BtpK5Fm290rL2+pX8Blf0u/h
kRvBysNev5Zp3ENu2Ozr/9Kg5e+PlIdJsh92eE5T9947nygPLrkmjHX29Lf9
Gb6n/5Z+4crDNVkHzbHM14cl/z2XfLga4x6rPPwt+X/WfpNnnV1xysMMyf/Q
fK1yn94WrzyMmLpkh4NzkG1fzvv+36+nNL7s5Jo/N1Yw66nGZcr38XS4a1tt
38X1nxXBWv4Kso/Y3mWm+8ZSj5UHPhtUTcj6wj1cefgk+/Sv648rkSk2UnmI
GO4a5BZyy7bQMbHtvlzGb5kt66ZrFj9tqOS/xJUBbRpkNeupKrGVz7uFPLBd
OtHh4PfrKd5HTe8eknPq4jtaruRFlyeEeN+3FU5udda/1yMt11PZl81V3K+g
/+xwLU9ArZ6Ozp7BtkzvnzzrcD1Ky8Wn3wyvFz0XGD+8sayPuln88IqSz22d
PE6+uJmk+Y9r7//Q2+2xLe8F95rfr5vYl+6SKm32GWH3NP8n3/dd4eAcaovM
5Fx16df1LPnfLPvZGxr6BrjVi9L8/7X+c1tPh0e2rHZV7QOOmXz+358mnzGS
n19WV26cMDlJ29Uxee6UaYvmuzSK13Gms9TnwZllN5Y+9kTLdVvSuyPzCOVq
znva1rXi3Qua9c7JqimCvd3CbImnEtOfL2zWO6pfuHtm/rnbTDvpjt65hWc+
x+Wpdt27QoL2l2by3KGOIb1r5YjVcp2Q597acbzo75OidbzdNP36YbeQJ7a0
rq/eXvZ4oONtHnlvXHnim0a1LtxUHuYFrV7i4PzE9u+4roW3pjinPFTzTDnH
wTnS1ubQqzvfr2u2Sr7KyrwAD/mjAvqGeEfYns46tb1RoSgtrw/3bFj6RVVJ
v0r3XM89Q836hc+EqTtCG2WI1PLmk/SzNI8eeOLrPMW8M1/im8vOH1VlzqBA
5cGu9t8NPR0ibPFD7qYdX/6w8jBSzhe0zFVlXKUWx9TPWdTsVi5nz6/r9gIH
Wn6/fkkp70EOz7rz7th6s37xkHz9IuM25S0g64iFlvFwoaT/2+Nxgx8XNeW0
l/QD/35//s+YYC0vn/a5ynR/fOq8ljdW4rC3l83m1CLPPl2/dI8fdMPbLcqW
snDbRltvBGq5Ej5u/MctJMYWPmT1ie/XL73kPXLJDvlqn8hq1i9BbdwmOTjH
2Px8o0Ld75t+N0bWFzst8128pP+8z+zFJboEa7l6SvoNena4udfHR8tzR9JP
3D8i4NGts7p+4TPcfuLzSnPvaf5b7RtS2dMhznYy5bYK369ffOW9Uou9uVwL
DzHrl5r29TI6e8baRuwt5jNvgFlHB8n6IovF/2kp6bsMOnflcpGzmv/Tkv65
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
2TpO09FzTb7TiwcMTlB78Ea3O55y6/xU131n5Pcpsi6jfoNlHdqperVmgYHx
iqObcWDDpvCMwfFaj9b7lagv8BeRy1anLG/2Yay6xPCPfY7OJ/r/2ShG08G+
60XPKjXHm30/F1mnF2j00/jAtmH6voB0Poxd2ORGPlNf4F6pD09bVtXUC/g1
yzpd9XVFfxiesS9Tb0fc3elm3MP+YJaH577mU/nH/lWLWZtLtwtXHPt/M23p
fGxlsD6XdeJW0QHmuarDlLhixsXF0VovjKt3ina0a7Htx/MX7Z/2k3J2T7/k
qpHqn+g9iUVqzX7mE6fr9I1y3qnE9i8BDYYu0X7RQPbPCw3YNnnYarM/PFrO
LcQPaDZ4UZTxl+xlf/vI0i7pF280/nlOi36vns+04KT/r5xnaD22YNts372v
ry7rslZeM+3WZzZ+yDbLvSrk57TsM//6pfi5IbfMcwNk/RIr+rp6/tCi90v6
1X/gV58WPz/6Ur0gRztjv9hyXwb5j5d9nvNTXV9Mvhun7ZZ9mwV5O7R9ni5B
++9F2W+5ceGqfdL6AVpf7eX918Iq9qP/WDJL289mOT/zh+j+ga8l/lhw2oOP
nMPJVXfV+w6PDD5N3uPUr5jR9UCgeQ9yi/utZJ8BfJaso0vKep/+Eiv7Bn9/
XN3SOdrg7tJ+ui7I8dqlhsnnB4u+q55Ll/dH7QUnn08k/X/3hQTn8DB4ARlX
is/fUtnR39TvEXQ9Le991sv+QPFT06e7x5lyLZRyFbeUy0vs8wU0iTk/L1Hb
Q0/pfyF1axdb+cG0k3nyHuRjtzz9h8WYdjhM1tdp5f0L/fcvOXfRa2OWomvG
GXyrrDevf7yX9O60af/2lngBcN6D3LSsr+9KvsgnOOdVurePP9b6wXfrIMlP
72oxgfPLG5zzJL/9k7vJnqXG7x0l70Emim4quIdFTxV8m0U3FZzzJB6Ck89n
ss5yjT94fWi8wVPKe5a9u5o554o2/PSU9fLvcq4GnPMhHS3rwRqyXgtNrh06
e5pJn3MsCf2mRnTdZ/J526K/qvskP8BTW/RXwVNacJ7bXN7X5KzW32tUSYP3
kvdHBX650erCTeMnb5P3KVtWvnxfcJ2Zrznv0a5K5Zafv5uXq6EPIbqs4DUs
eq06j6O/JXqt4L0sOP1xi+TnYtMOS/Zujtf58YysR07vzRwYnMH4sc8lnxMu
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
HAt8gnO+Aj7BeV/P+Kn7zaKDAc/4I1NFVxCc9cROiZuDf+y/JOf9plto9Ar/
s/+cXPSbbiH1gr276NSBY59BziFQX9ijt6Z+m9ijt0Y96jkU0SVT3TGxR5eM
+sUe/S5w7NHvot6x55yq3mcgOOctqXdw9uuodz2XIeflqHdwzn1R73q+Sc4j
Ue/gV0Q3Bpz8oxtDe9D9QtFpAcd+o9Qv7QT7c6KLAo7917J/q1/aCeta9CRp
D+DJyaO+6U9S7+DoEFK/4MdEN4961HRERw5+wIeLzg88gN8RnRzKC95L9Gco
Fzi6LpSL/Yb0onup95cInpz8n04m5QJHR5Fyqf6H6P5R74qLzhLl0nOmolNE
ucBXi84P5dL9PNHPoVy6jyi6NJSLdQ/6nJQL/EvyyW96nqp3KTg6kJQLHN1C
2jl4HdHForzg3UQ/ivKCu4j+EuUFR7+I/Ou+qeiFkn/wL8kB3/RFyT/4atGr
JP96Hs1yrzT4K9mH0Xu7iF+Rc4P0d3D00OABHB0weAAvI3pZqnslOHpT8ADO
OTfqHZxzU/DDOj5K9FHhB/xL8odveqrwAz5bdDvhB5z4DvjR84xyfh5+wMtb
/FtNR3Th4AfcV/TQ4Ae8ruiGwY8+V85PUl72V2yi70p5wT8nD/mmB0t5wdEj
pbxGr+6/OBTGH40nkPdKzBfgxFPAD7iznEeCH/CulnWWxs3E/6ePBz/g20QX
Dn7AOa8LP7rPZLn3BHyNvB+h/aj+nJyL0/NnvJ8U3SrVO5Z9lKyiiwuf4BNF
xxU+db9Z9lvgE5z3cfAJThwKfIJ3EJ1J+ARfalnvg9cXXUH4BL8l58bhE5z9
PfgEbyfvs+ATfL+cC4VPcM4Twic459nQsVI9SNGzQo8JvLXoMqFbBL5J9IuG
y340+F7R86ks5730PJTo4aDDorososfC/ix4S9EnYb8VHB0PzkOAo4PBuQFw
9CV4Xw6OngPvOcDRT0B/SvcTRIcKnSZw9JrQLQJHvwjdH43XF/0f9unAy4nu
Cvtx4EdEn4TzGapDLPoe7Kvq/oboZqBPAb5adCp4zwceJroQ6EyxTi8uelPo
LoGvEf0ldIvA0S8aI/MlODoq6I/ofoLokKDrAY6+Bzoa4OhpoPfE+reD6D6h
lwSObhJ6Sazv0E3qbllfrBH/08uyLkgpfmwRi/+PPtg1i5+PXtZsiz9P3Dd6
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
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8l9P7/+89PkUSKlEIpVAkMgsVDSs7IxpGRna2iGRmjyKyo5RZqewo
ESF7b+Jr79H/9ex1/o/f4/E+j/t6X/e5z33u+z7nOtd4XWftwSMGHJtEUXRc
GUWpjn9lUTQjj6LN4yjaTryxdRStIt4eVRR11v/nVOdb/b9SdTZSnTPEe0p1
jhPvEtGXqnyvOhfpeLHK/0RfpYZv0/l1RF8m3uUqP4j+n3hXqZ2N1c4BqrOF
jl+IPxla57YTfa/obqK7i27EfVWWiO6t45OF+iX6Tz3A+7r2PZVC9XOVT8Uf
oD5vrnu9KHpbHVs0RFEzXfeq6P0r328r/X9A7WzPs+v/rio/im4i/jUq74r+
AVr97KRz3/CcojcUvZeeezO19YLqfCn+heJvIP5FOkZq803Rj6pvR6gsEZ2L
f7fqbanT96mPW4ruIfpW0Z1EbyJ6tOrcrvKK6i8W70DRLXk/Ot6mMln0Pur7
Mt33ONE/69ozVO8eXfufeHepFOKPFK8UPUn810Ufomtbif996nPwp+v/GipT
RZ+tus/oeU7VuYNV9yuVKTp3jvjPin+a+CN17Q066hf9K/6dKrnq/CT+6WLe
Lf440W1EryW6j85frWvX1v+tVO9L8Zqq3KI6G4vXWfQVotcSvbbofXXPIXpv
d6juqeLfLH4z8bfjvevYRmUTPXtjtXuj6Imqs5HqdBJd6nhZ5m/dR3U2UJ3H
RVfiXa7ykui19B26qq1PRP8m3gTdrwtjTqUz40f83XTdePV5A52/Q+d3VH9+
17ndxZ8gfgfxm2gcnSH6C53fQ/ybRHcUf1f6Jbp95vF/v67dWG0+rH7uIN4u
omeI7iV698jzZWrh/s9MPaYZz6uq/Xk6957+ryL6LLX5g+71qOr0FG831dlF
528Qv53+9xN9reh1+Aaq01XHLfimet6OKgPV/9t1n/1qj7G9Vf9WaNXbS/Qt
ojuLvl7Xrq9jO9XZR/zbxN9c/2/TtWNLf6/+Ol4nflvx7xX/MNHdmGvi3yx6
Q/FvFf/C0s81SfSY0u+hnb7Lg9yPcaDnmi16ieofruNS1TtF/JZq4zfVW1V9
eVDHo1XW1zN8qTqPFn6ue3RN49zzNNHxNPF76Bk/U51HRG/OO9d1xzIOdO3p
4j+pdkfoup9VbtQ1m6j+mjo/VeeuVP29RL9Tup0/VOdm1dlM9DO6/mSVr0Uf
qPN3q52dkBnqX3cde+nageLfIf7W+p80WAbeKfpQ1VlFZR9de6baaK+yn+j/
6fzT6mdPXZs2WB7epfpTUssjZFHcYPl5h/4/Iv6OjC/xD6Bt3Wsb/V9N/L3U
3i/ir6j+zlLZRf9X0nG2ym6x5e20wt/uLtXfLPP7+Ub0CZnn0VLRJ4oej2wv
LFuOEL217vOxyoE6t1jv51SVLnqGV3Q8ifVA9DeFZc7hqv91YZlwmOh5avOA
zO2MU93LVXqq/nbMHdHPqX/zVedg1TladZ4XfZDoo0RvrnpHqe//iu6u+ueo
/vOq/6qOZ1Y+f5XuNbq0TPhRvJ9UmiAP1N9Ftd/XUeI9oLKu6v+i468qK6vO
hjr/Uu05+b7Onat7lSobi/dy7Tk2TfV21nFHtT8m8XMfqTqddP6V2nO4tfo0
QP0YJv79qcfFDqo/NcxlvuM5One2ygjRC8QfJP4xomfruLGuz3RuZuGxx7pw
eup5vArvX88+WH1+SPW21D3fV9lH574X7weVBsaLeB+o7Cv+o+KNVzsd1NeH
RN8gup3oM1PP11WDTL6m8FrcF7khuq3o8Tr/X+b1l3d2Ten39ofoP1VaqI3P
CgSqxrUOW+ie76rspWs2VP8WqJzC2qfzY1W21bWP6dxG4qfivynehSrbiD9b
x9EqW4nupjbeU9lbdTuo7j66x0mqv7p4N6kPG6nO5qLfUdlTdbbVOzle1z6j
ukt07hjV/U/9eVPX3a76A0W/IXoSa7zoWtetilxQvQ9Ye3VtW9HHVH5HvJ9B
Ov9h4e9yqtr9Q+U51TlE/I/FP5b5qGvHqjwh+jxd9xfjXHX+1Hs5F3kg/sHi
vV94PH8o3km577Wj6q+jczPEP0W8X1SeFX/lzHrIn6IT1gyVecgEHS/OrGt9
ruM5qt8euaR7jdL/6eIfpPbeLjxf/mM86P/eqrMuY170RPHPEv2z6APEj/Ue
/hQ9FD1Ex2Nqz/dDRX9aeHzurrZfLvx9T2d+6F1/pHv/VvrdRrr2QvH3EP9Q
1fu19HteplO/q2/nMG/QN3TfX8Q/SPW/Fv948W8Q/1Mdz1J77cTfhHmttjK1
U+m4Iuul+MdV/vZ89011fF2lv657U+fPL61XvKA6k1SOVJ2rdf0FpfWHEZXn
AOO/i65borKLru2q45squ6Fj6fiaSj/Rs1I/M2vu6MTy7HD1YTOdf0NlV53b
VP3cSW2ep37/jgyuvC68g9wSby3Ry9TOGP2fiw4p+jzmomgUpQsz6yEf63im
6q/PM6rt1qW/I3Nx39rz8Qid/zb3WP1b7YzOPGaOFe9o1Zsr/mGiDxP9kOj3
df44/V8HPZY5WloPfAvZJ34b8VfRcVfVP5B1Qvc5XuV08VZT2V38g5Gz6LPo
8bp2JOuSytbo2Kxlavdlnb9Hx01VZ774/cS/Xv9/E/998a4ovRZX+t9b126F
jqE6h+hez6kvO4meqPp/6/xeor9S/Ua59e1GqdesPcX/FvlQ2BYoVVbCRhBv
ywbrYTvreK/+56LXEv2H2lld7ayu7zZHpQOyILf+je69tur8q/p7ME+QR+hD
4g8Qv7H6dmRh3Xy2ysu61046fqIyDh2Rua/SS/RH4n2scpnoq8X7WW3W6l9r
tfO9/jfV/ZqJPlNtfsN7FX2/+AvR+URfJ3oyY0f0Bchq9BXRI0XPV/1+ancF
1hv14UrsFPEb077umer4DTo676F0P/+n/1nqcYgutHPh69EFlusE6NKBRjdA
/0AP2RuZH1u36i36+tL6Fv8PVTsr6R7nRn6fsxK/w/3Ef0z848U/XrwktS50
HetbYZtxYOr+fBzZ9sIGw6bcTc84Ru3vX9ieLIJd1lX8UeKX4ncTvana3z+3
PFxc2kZ4RP976PxXzC8a07Vfip6sut1UZxHrvup3L3we3neV+fR/JnpK5Dm7
tc4tFn14eC7GCbLjoTAeVtPxQZV1RZ+g47PYk5Hf/7zEuiJz5IUgc77SPd8S
PUx1miFPKq9Fg0I7z6v+iYl1R97Vz8iJwvPrdtXdvnKdJswPbGTV+0C8J9GD
RbdQeTjxXHtb/I9Ub2Ndfy82N2M29nhkXJ6tOjvo+GHibzQqjNcVdPxK136J
3qP/J8bWddBzXhZvou71iv5fIPoLtTkkMn+JyiFxtPwDvpl4jXtJ912Yuv0l
hZ93v8g6CHMfPQT966rSOhjjrnkYh8yvR4L9+7baeYM1LPKaM7z2uvMrNof+
bxpb134qvLfWgf5AdTbSOJml9l/L/I2eTDwesBuOqG07MD6fDt9rivrTT+WN
0M7ToU10gDal12scH4+rvCG6udo/W+38pD6uUvv7vq1za6g8kdjXMU28/ipv
iR4s3nSV9cL4mZZYZ0Amnhr0h5bh2Zmzw8I3fRG7I/SfMbaqjvclHhvrNqCw
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
l6uMARsd2Yag/X5BlwD7xd4O/w/EIdsI
         "]], Polygon3DBox[CompressedData["
1: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
6+sNK8N16vPpf8r5yPXM2wmf2aMcx3GvE9/0kCrcpj6qXPc9VfgPeZBb5Qaq
cGX7d+KrrFaGW9Zn0fdcoYwvqg+q77B0Gd9VH0Jbdy3woq3YvJeC1y7DDV7X
DVcoZ+j1LiAXJL9QZ13asvEt9DGmaMUn1ldetoytrc8st7JkGV9PjkXuZ4ky
XIsckL7r8mV8Y31YuWc5aH21KYtww3LEg8CzFrHllyuDtenlloaU4X7kmOSe
FivDNclByQ0tXoZrkiOSG9O/ci2RI7td7qUK93ugHFYVDkjuxxiK/vZj4Cs4
3pByQxW+RO5DDmQe6q8F7yw/z/jTgc8Fbyb/IgcJPrvKXvwLZW7wlVVsUY3i
SzletMr8lOPU172kyrE+76xlOExt2X8oy2nbyElyPF8/8QXbWLdtJ1zZRnX4
fDmzWbT/qtjGa+gjuRZV4WvlbbUfHi/DlV7TCXd6WpXYghzqzBzfV8aWupxz
c1SJMRhbuB78SNNf2+PiTrjIk92j2uEk5WNtY916nfBfcnpyeWt1Yq85vtzl
RXKwcjG+8+BTwYsPhB9zvb2W579BFR9W33WgE1tlWznmVmyWLaibkXKe6zPl
MNeDgfgkxqN8lk/SfoNOnqnc2taUldvh2K6n7kHwuRyv2AmXJt8rNyenJv/+
APgcjodSNuF4csrZHI9IWVdf2XvIcdWJvfJ6HXtL+8e9epsytpV7trbUzmVs
K20q1/t9y3Atq3bzrH2GPjufubGq2xtuRd5lXLmAMr76Bt3EJ7quPxwXtD9R
+9A1oRsOZx3wyL6P4LIT7nmCOvEGOejNqJuCsrl7Wye+8djaP+34yHIZ29Xh
G+Q0jI3J3+j7GCObBDxSGS7CNvraC5bx1fW59bflRORChnXjy8th6vvr0xuv
mIhzW3TDmRqLO72M7WVMbmKe4xW91nCHcbJuvt/IXNM6vVzj3nX4ofV64f/k
I+U2zmqHgx+Rsb6gzVeujQwzAP4c/KVrEXhu2t7Yy7M7mXJUGT5aHk7+7Zgy
fLC8mnzacWX4Znk1+bRp6XttL/d+am14jmeg7NEOP3lzEZ9eX34u8PTav72s
9UfL8Vbhlxbn3tbdPF/jCUv2Y5/8VSX++CB9pqf9ahzPXyWea1zXWIrxKm1p
YyrPcjyMsoJ2RyexL2Ngru9LyQWC1+c7bAt+gjbXgDcAb6et6z4P3hC8Pfip
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
sJ34rLkQcmN+ptpP9c5q19WArtKLPeG74jvju2283rngO+77JKdlHogaFN8n
+ZDVe9m/fRZyI75bPhP17WoS5cedX8aD1HjJZ01RJO9Djlhu2PyPb6voReR0
3OON56rdG60bTkj9gjHd4bHcbmwVfUltJ22WEXvRN1i3bDu+8PG9cPH6H2qR
1KL819j/8vXGaPRB3cPVv6oR1nfdvBN/8H7OndmJD/V5lZiRsSI1tnI7cjzG
bz8pko8zvxqQdvaAj6rwc991oiFXfzJJGVvFGLxckJyQz+8z+s/N8ZhluBdj
ug+7PpThkrQZ3m3iNav77nfie+uD70DdlNpCVfS5X+tbdGJrrl4ml0ObU73S
vFViucZ0P6iibza2o6bb3Ia5qny2cWX591mqxHqvaCU2YXzBWIAxCvU+agbd
C9wTzAearQzXs2Q3emVzIuQSjMGp51UjKlexVSf6+HnLcA+7dKKHWrmKFvvV
VrgOOQ9jdzXPeaUqmmi5gXfb4R7lILXHXuf+vVMl38JYjxpyuTs5vBvaydnR
PjReZmxLjbLcphyn9rl2+sv9xGddy7ekz0v98Mez+j60o+cznjwTeNN28g20
YbRdbOO7sn6VWJfvjGv7hlW4Tdd4uQ85EPPNFuuHS5FTkRsx5+fpMjlUcj++
UxNyPzeuEqsyR0T9uTkNS7USY/umDN+tr7sS7ednvLXq6BvUObjWb14ltuaa
b6xs0yqxImNm6q3VZLq+2efbMvy4vvJQ2q9R5Xk81gpHo57ruTJaKDlX9YHm
KH3USo6Iejtz2uQrzJmRe5WD1V/Tb5NbcU45l17rRe8l/z53J5zHK/3Ed+Vu
jbmYL2JOlblUtvm8n/j8gp3wtepbtfG07Xwm6nO1ebR1bGNuwPx14kP65vrj
25eJpRmTn969qAyXe6lzsB89wHyd5Aip7/6rTG6Y5/pVNOz95vM/q6LvNtb8
cyf6s8WqcFnes5H47EFluNoF+f6HcXwhnzFJKz6Tes3zy+QmbqwPKJdWRt+l
NrQGXwRutaPlHGDszcpogfZpJ7ZkzMP13HXdWJlz1rm6d5FYmTGzy8F7FbH9
9QHk+mcvoh/+oIyeRs3wU43/rHZ6jiL5Mu/KkbWjCTdWYMxgcf0J+UrqXgdv
2co1mv/wcePPTtmJvufUMtreVduJjRkj03/Vjx1dfUQZe0i7SC2gMWb5EHmR
scGPlNGSyq2rnTMGLv8nD/iM72qZ3Edj8tqOxmPUZmpDmp9ydJnYn/6D+SHH
lon96R8UjHd8GT2ce4dcsfoRfVV9VvXn5jhM1kqOzeFlciImbSUH5zqOjywT
a1TzbyzQmKD7lfvWdM37JRd/STu+iT6KWrLFiuR/fFVGe2eOkr6Q64m5S4/2
olVTs6avs3wRX8b3XS33I734atqnat+2KJLfOLvrq/OhHW2bGjd9sxWKxLaN
cevbrFjEt9EYUTs2VS/6R3NUjaU4x41tGONwrO+L5HYuUSU2IVd9IO1fLKMF
1ieaq8z6oNZTzbxaUTWjxmp3LKLNU6O3TGNb6Zs4X9XSz9iP1lTNqdzyzkV8
P31AtXuLgs+sotFQm7FxJ76fPqDavcWL5FN9XUbbqCZfX0+fT63fkCL5oa6Z
rpXmMDze+CP6wlMVyV90DXTte6ETX1af9kjqN6f++37ilWppvmt8Le1ffd11
imgF1QzqSy5XRHuoBlFfedki2lo1tsaydyqSn+z8V6utJk4tnHPGuWLOpPl1
7knuRcYMpnYvGEgc5sLGPlDjIRdtTO5G8DTOn3biVfIr2ma+e2qwzG8adSBx
PON3U7o3DSQOZPznmjIcjNyLMR7jRe6b7p9qyJxv6l/kih9uZb/S/pHbMOal
reKcda5qs2gvmY9krOuBVmwf40nyNtpA5pMYL3q4F02Ca6d63r16WUPPafgX
Y+WbNHykenvfF/fcO/qZw85d7T1j3ca87+cz+u3oDb2P3k81YOrRjX980c47
elXDp5ojOVxv3o1e3rXMNc256Z7qXuoc1V9QL+n8VOMg/24+gLk/7kHmTxqf
fKwXvaxrkTHiR4qsSeanGp98vJeYv/6K+kjns2vkiHX8CWPBxrRHKxKf0Xb6
gPrTG37LHCv5YW1F11DXTm3GK8po/NUqHkT7CbRFBpJXYD6B+vX5e9HKq5lX
X7+Q/mw7HJCxfGP6C/bCB10NnrCKttwY4XhV4rU395JPcaG2ShnfRU29eizz
2dU6HgDeuo7Pp6/n+OvU8eH13f189d365/u3wzFdXkbDr3bxQPAlZTTmckU7
N/vpyHW4ODlR95/fyvg2a7XCD6s30TbbGDxRwyeax2H+xif95Evoo+/Uji2s
Xn/LXmxi15ezqvhyxhzUP27Viy+oz6c2Qo3EoF5s7svK5HSoVd6c+tf62bPd
q823uLRMDoda582of7WfPd693XyPQxs+Qm2B+c5HVMlHlyszx2GrOjFPY53e
H/M/zJXWVtioFdv2rjLaTufoiEXira7X7gHfVOEj1QKoKXPv/qSMttU9XL3J
M1W43J/aya/WBtP2MgfY30Nwjjm31Ih/VmY/t6+aWW3ZNctws9q075fBxva0
Kcxd+aexV+4psr74Tvoujta8X75TvktqZM11OqEKF2JswVwZ769z+b4i+cfe
Q++dOd7+vsDnZbTJ+vjmz/oO++76Tr/D8Rplctm0YdQWqzF2rxqjSK6MNpj3
0/v6apX8ddf+1zrJnf29jD5dnbr54foE+gJqEszt0SfwfdOXVV/xXRlts2v6
c1X0atpCz3eSX68/JhcrJytX8HKZXBs5gy2dO/oF7eT8v6atXCb2On87+Y6v
l9E6f95K7t6bZZ6NXL35/H5fuV854POqxIPUDho/MvfH9UH+deMiuTLON/nZ
jYrkcjjftJ/XKpIv9kU/sQxjGiM09qe21fAcGPB2Zbhh5/BI/49b4Xh8/7/s
x1b1HTC2boz9uoYvNP9X/vGaho/VljDfyJxzbYqDwW+UiS1M0twffw9BbnLU
Vu7Fv3V04N4T7RGfr1zlaM36oc2urV406+PoVXJ9vAf+XoI+hfVqQFzPnMPO
XW3wwVXml3upe+qk4H3Ap7USs7ipzJ7sXmyOjVyZa45rjZxZu0x7Yx2Ht5IP
q15QbbgaH/dr92D3XnN4XP/MYTO3yWfS5nijMvaZ65W2mmuYx54zV0YfSt9J
rrHTtHctUSOxTuPvGHtU0+T6UlT57QN/80Jb4I4yWhBtAvWC6v3Ug6/Vi15S
/9NcQ2Ny8o97lcklMMfAXADfad9lYw/uNc5vbYeti+yd7qHmj1xd5H015mSs
qd1LLs3KdXKdzakxEKO9ba7njEXmnzkZ6s/G60Wb75x3rqvRN/fAd9533ViR
toz30+e1SxHtjHrcJ1qJY/vbC2r2LwDvViS2uEed/dsYo7G+jcusvcb8tHf1
x7VtDuxFu3hLmXivsX/3Qtcv90Y1TGoP9Tn0NdQgaqv5fvhbDLsW0TqaE2v8
3ji+uUZD6+QSmXNkrpj2t7lH5oxpC2kTydWowzdWMVcde9KYhblq6nvlhowr
mdtljtlbreSqmItnjrj315w8bTNtNG3Ft4vkduvPmLs/Q5G55JzSv5mkSKxl
7jr2rDEX/YFN6+iP1DyZy+VvTpjrZK6B+WWr1tGv9IrE+s8sky9kzN/1d4Ey
uZzGFrRdtGEudu8ssl+sXYd/l4c3l2ulOrlb5nS5H6xbZy81V8jcrhX1SVvJ
8TIXa/k612NOlrlXK9TJzTIHy1y7VerkeplzZ+6XfNIjreSAmRu2Q53cCHMk
zD0xB3rkVrQwxrrmqeOPGfPS9nR/lF+7vIjWVB9T33Luxt+epk6sx5ibsR9j
QMa2ZitiC2oTmu+kZk1/ZMo6sSJjQMaOjCHZf1AR/ui7KnynvOejDZ9s+3GL
+P9L1vG31MwaP9ivTG6GORr6I7NQlmslJ0p/ZdY6/pU5Tvoz89XROhlD0r9c
sI5/Y0xQPmEJyumtaHD11xat43+q75SvO7COfkCtiPyL+nxtwQ2K+IMLy2G3
kkMof7l5HdtJDZH6SfWVxq7VBOgvLVLH/3q/iVfs37wvPzZ8xeA6/tsZDb+0
Z52+anjU9uxVZ+1S46M/OX0dX92Yovp79e3qJ94swm9MV+f5qIk0t3PZOvyJ
OZ7aitqM8ivmwaj/l898yPna2H7uH9rCtxex9bRXzIe6tUhu4HJ1fCnzcox1
GvMcAl6wiDbZPdG9UI2yuTRL1Vk/zKkxN3QZymWt5IiqFfQ3I8wlVTNortDS
ddY3c4b0RfRJzLczViV3f3gd/YUcvv7zTHU+zz1Ybag2jLbL0kX85xnrvM/G
TOXKD6rDBcqZ67vpwy3TitZGfmOGOuufMVj52Q3r6L/UiLrf6IOqV3ipiFax
bvaTYc1+YI6luaPHFonVGLMxnmNcx99PMcdBLlMO3PV88Tp7r3mu3h9zaF0v
DiqyHromuRaZc+vzlAN3PT24iC8lJywXrE+lvsbfq9mxk9/MWa6KflZu2t/w
Uquhvaw2W47LWIx6+E9bicnIJZtf4m/dyCnrWzqmY+ljGk/bo0w8z5xJ19vJ
68RbtWHMnR1W53maQzv89wP6WS+/aCVfQj7XWMtl7cTi56Ss3UpM/skq+RL+
1oQaH3/rxt9zMJfP37wxn3+GKlynvznh+mmOrOvhkc36Z4zC2MROvbyv5rS6
Px1WZH0159X96fAi66s5ruY2H1Ek1mt+0ZetxHx9dv6+gr/N5TP091DUlKol
NSbi+i5nKld6VBG9hf6dXOnWTXxNf0yuR420vwVycZXfrvI3QfztA3/vwFw/
fwNBLtP8CrX3+h9ykSeX0bL4vJxP5qi5H+zfzBdz4lzvDyjC3dne326Rw5Or
Mp/BXDE5K3//xHiDWuevG75uzyrcjBoGf19rEcrNneTEqyWYtw7/9mAT3zKn
yFwiY1Dmb8jHqz10TqqNMbntsFY0Mtrjm5bxldVOmIsu/6wv/GyznxkzMVZy
YpHP9v4YW/Ea1KP4e2bmGqkJNx/H+ITaRjVZ8n9b1uED1TgYz9q4jm+tdkX+
awG/YyuaDuNDYzT7ySa95EYb/3G+miOt/uyCKrEzc5bk996s4juoQTDetUmd
92XXZn1Wg6ke84OG75ytDj9qjq725EJ1fEM5DPnPXav4Xtc3/ssOZbgOcx/1
b3YsE782d1P/4STeybKbOfZxc31q4/yNG/nQOerwh+b8aN+Zo2LuzQvNfDTG
ZWzrFPApVWJsxtbM2ZJfnb0Ov2gOsb9N5u9nyf34G2XGPvw9OH/ryhiI9tag
Otz/+Y39qcZN3+OpXnJptA/VaptT4+9nmbNmrppr0uJVfm/P2Jq/Qai/bH6V
z/KdXuxXNWvmp6xZxL6U05XLPa6IXmDvMlygeZnay4vVieXKAWqvDqnji8gx
qgfYs4w+4LPGPp+qDvftb/78H5ryVKk=
         "]], Polygon3DBox[CompressedData["
1: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
LNZfnHc8qw30oPpXwbW+Kfd3Kxv3fg==
         "]], 
        Polygon3DBox[{{2410, 1763, 1762, 2409, 1318, 1319}, {2119, 2118, 1409,
          1021, 1022, 1410}, {2408, 1771, 1770, 2407, 1316, 1317}, {2040, 
         2039, 1305, 954, 955, 1306}}]}]}, {}, {}, {}}, {
     Line3DBox[{711, 1, 631, 312, 1670, 16, 775, 1682, 31, 1697, 46, 1710, 61,
       1724, 76, 1738, 91, 1754, 1755, 106, 1777, 121, 1786, 136, 1795, 151, 
      1803, 166, 1815, 181, 1825, 196, 2128, 477, 855, 211, 847, 502, 1034, 
      212, 1035, 213, 480, 1654, 857, 214, 702, 1427, 482, 766, 215, 843, 
      1429, 484, 216, 1036, 217, 1037, 1038, 218, 1039, 219, 1040, 220, 488, 
      1600, 769, 221, 708, 1434, 490, 771, 222, 710, 1436, 492, 223, 1041, 
      224, 1438, 495, 858, 225, 844, 494, 1852, 210, 1838, 195, 456, 2278, 
      755, 180, 676, 439, 2269, 745, 165, 670, 2094, 422, 150, 1793, 135, 
      1784, 120, 1775, 1774, 105, 1751, 90, 352, 2261, 726, 75, 633, 337, 
      2254, 719, 60, 846, 2133, 498, 45, 1695, 30, 2006, 316, 848, 15, 845, 
      496, 909, 14, 907, 13, 905, 12, 903, 11, 901, 10, 899, 9, 897, 8, 894, 
      893, 7, 891, 6, 889, 5, 887, 4, 885, 3, 1601, 773, 2, 1273, 309, 
      711}], {
      Line3DBox[{1670, 2153, 2154, 2002, 2137, 1042, 2001, 1921, 2004, 2584, 
       1853, 2003, 1922, 2440, 1854, 1671, 2390, 2441, 1855, 1672, 2442, 1856,
        1673, 2443, 1857, 1674, 2444, 2337, 2501, 1675, 2445, 1858, 1676, 
       2446, 1859, 1677, 2447, 1860, 1678, 2448, 1861, 1679, 2449, 1862, 1680,
        2450, 1863, 1681, 2585, 2005, 1864, 2006}], 
      Line3DBox[{1682, 1923, 2008, 2338, 2558, 2007, 1924, 1056, 1683, 1925, 
       2451, 1865, 1684, 2391, 2452, 1866, 1685, 2453, 1867, 1686, 2454, 1868,
        1687, 2455, 2339, 2502, 1688, 2340, 2503, 1689, 2456, 1869, 1690, 
       2457, 1870, 1691, 2458, 1871, 1692, 2459, 1872, 1693, 2460, 1873, 1694,
        2461, 1874, 1695}], 
      Line3DBox[{1697, 1926, 2341, 2559, 1696, 1927, 2342, 2560, 1698, 1928, 
       1071, 1699, 2392, 2462, 1875, 1700, 2463, 1876, 1701, 2464, 1877, 1702,
        2465, 2343, 2504, 1703, 2344, 2505, 1704, 2345, 2506, 1705, 2466, 
       1878, 1706, 2406, 2467, 2131, 1879, 1707, 2587, 2011, 2012, 1880, 1708,
        2588, 2014, 2015, 1881, 2135, 2617, 2286, 2017, 2018, 2252, 2253, 
       2133}], Line3DBox[{1710, 1929, 1930, 2561, 1709, 1931, 1932, 2562, 
       1711, 1933, 1934, 2563, 1712, 1082, 1713, 2468, 1882, 1714, 2469, 1883,
        1715, 2470, 2346, 2507, 1716, 2347, 2508, 1717, 2020, 2021, 2589, 
       1718, 2023, 2024, 2644, 1719, 2586, 2009, 2132, 2010, 1720, 2564, 1935,
        2013, 1936, 2288, 2287, 1721, 2436, 2565, 2328, 1937, 2016, 1938, 
       2290, 2289, 1722, 2435, 2566, 2291, 1939, 2019, 1940, 2225, 2155, 
       2254}], Line3DBox[{1724, 2348, 2509, 1723, 2349, 2510, 1725, 2350, 
       2511, 1726, 2351, 2512, 1727, 1094, 1728, 2471, 1884, 1729, 2472, 2352,
        2513, 1730, 2030, 2031, 2590, 1731, 1941, 2022, 1942, 2637, 2293, 
       2292, 1732, 2294, 2329, 1943, 2025, 2514, 2393, 2297, 2296, 1733, 2156,
        2226, 2394, 2620, 2026, 1944, 2227, 2157, 1734, 2158, 2228, 2629, 
       1945, 2027, 1946, 2230, 2159, 1735, 2422, 2567, 2299, 1947, 2028, 1948,
        2330, 2160, 1736, 2621, 2161, 2300, 1949, 2029, 1950, 2255, 2261}], 
      Line3DBox[{1738, 2353, 2515, 1737, 2354, 2516, 1739, 2355, 2517, 1740, 
       2356, 2518, 1741, 2357, 2519, 1742, 1104, 1743, 2591, 2039, 2040, 2592,
        1744, 1951, 2032, 2302, 2301, 2593, 1745, 2162, 2295, 2163, 2033, 
       2520, 2165, 2256, 2164, 1746, 2166, 2298, 2167, 2034, 2521, 2169, 2257,
        2168, 1747, 2170, 2229, 2171, 2622, 2035, 2173, 2258, 2172, 1748, 
       2174, 2231, 2175, 2623, 2036, 2260, 2323, 2259, 1749, 2568, 1952, 2037,
        1953, 1750, 2569, 1954, 2038, 1955, 1751}], 
      Line3DBox[{1755, 2473, 1885, 1753, 2474, 1886, 1757, 2475, 1887, 1759, 
       2476, 1888, 1761, 2477, 1889, 1763, 2410, 2478, 2050, 1890, 2049, 2437,
        2638, 2306, 2051, 2138, 2266, 1112, 2234, 2179, 2235, 2180, 2053, 
       2139, 2267, 2634, 1891, 2052, 2184, 2185, 2055, 2421, 2597, 1892, 2054,
        1956, 2057, 2598, 1893, 2056, 2396, 2479, 2059, 1894, 2058, 2398, 
       2480, 1895, 1771, 2408, 2481, 1896, 1773, 2483, 1898, 1775}], 
      Line3DBox[{1774, 1897, 2482, 1772, 2047, 2134, 2615, 2407, 1770, 1958, 
       2046, 2595, 2397, 1769, 1957, 2045, 2594, 2395, 1768, 2264, 2324, 2265,
        2528, 2044, 2187, 2233, 2186, 1767, 2183, 2263, 2633, 2424, 2043, 
       2182, 2232, 2181, 1766, 2423, 2624, 2262, 2178, 2042, 2177, 2303, 2176,
        1765, 2596, 2304, 2305, 2041, 1209, 1764, 2048, 2527, 2409, 1762, 
       2526, 2362, 1760, 2525, 2361, 1758, 2524, 2360, 1756, 2523, 2359, 1752,
        2522, 2358, 1754}], 
      Line3DBox[{1777, 2363, 2529, 1776, 2484, 1899, 1778, 2485, 1900, 1779, 
       2486, 1901, 1780, 2411, 2487, 2061, 1902, 2060, 2438, 2639, 2307, 2062,
        2140, 1903, 2236, 2630, 2188, 2238, 2189, 2063, 2141, 2364, 2618, 
       2237, 2190, 2191, 2065, 2142, 1121, 2064, 1959, 2067, 2599, 1904, 2066,
        1960, 2069, 2600, 1905, 2068, 2399, 2488, 1906, 1781, 2489, 1907, 
       1782, 2490, 1908, 1783, 2491, 1909, 1784}], 
      Line3DBox[{1786, 2365, 2530, 1785, 2366, 2531, 1787, 2492, 1910, 1788, 
       2412, 2493, 1911, 2070, 2310, 2400, 2645, 2331, 2308, 2309, 2071, 2425,
        2625, 1961, 2239, 2143, 2144, 2072, 2601, 2192, 1962, 2074, 2145, 
       2146, 2619, 2073, 1963, 2076, 2367, 2570, 2075, 1964, 2078, 1132, 2077,
        1965, 2494, 1912, 1789, 2495, 1913, 1790, 2496, 1914, 1791, 2497, 
       1915, 1792, 2602, 2079, 2080, 1916, 1793}], 
      Line3DBox[{1795, 2368, 2532, 1794, 2369, 2533, 1796, 2370, 2534, 1797, 
       2413, 2498, 2325, 1917, 2081, 2311, 2640, 1966, 2332, 2147, 2148, 2082,
        2426, 2626, 1967, 2241, 2149, 2150, 2083, 2439, 2641, 1968, 2085, 
       2371, 2571, 2084, 1969, 2088, 2372, 2572, 2087, 1970, 2373, 2573, 1798,
        1143, 1799, 2499, 1918, 1800, 2500, 1919, 1801, 2603, 2090, 2092, 
       1920, 2091, 1635, 1971, 2095, 2151, 2152, 2094}], 
      Line3DBox[{1803, 2374, 2535, 1802, 2375, 2536, 1804, 2097, 2098, 2616, 
       1805, 2335, 2414, 2647, 2336, 2099, 2334, 2326, 2327, 2193, 2574, 1972,
        2240, 1973, 2194, 2268, 2427, 2575, 1974, 2333, 1975, 2312, 1806, 
       2576, 1976, 2086, 1977, 2605, 1807, 1978, 2089, 1979, 2577, 1808, 2376,
        2537, 1809, 2377, 2538, 1810, 1153, 1811, 2606, 2103, 2104, 1812, 
       2578, 1980, 2093, 1981, 2314, 2313, 1813, 2428, 2579, 2243, 1982, 2096,
        1983, 2245, 2195, 2269}], 
      Line3DBox[{1815, 2378, 2539, 1814, 2379, 2540, 1816, 2106, 2541, 2415, 
       1817, 2401, 2604, 2100, 1984, 2270, 2271, 2196, 2402, 2627, 2242, 1985,
        2197, 2272, 2429, 2580, 1986, 2101, 1987, 1818, 2582, 1988, 2102, 
       1989, 2581, 1819, 2380, 2542, 1820, 2381, 2543, 1821, 2382, 2544, 1822,
        2416, 2545, 2110, 1823, 1246, 2105, 1990, 2319, 2273, 2274, 2430, 
       2583, 2247, 1991, 2244, 1992, 2248, 2198, 2276, 2635, 2199, 2249, 1993,
        2246, 1994, 2200, 2278}], 
      Line3DBox[{1825, 2383, 2546, 1824, 2384, 2547, 1826, 2115, 2548, 2417, 
       1827, 2315, 2316, 2642, 2107, 2202, 2201, 1828, 2203, 2204, 2646, 2108,
        2318, 2317, 1829, 2403, 2607, 2109, 1995, 1830, 2611, 2118, 2119, 
       2610, 1831, 2385, 2549, 1832, 2386, 2550, 1833, 2121, 2551, 2418, 1834,
        2404, 2608, 2111, 2280, 2279, 1835, 2205, 2320, 2206, 2631, 2112, 
       2208, 2275, 2207, 1836, 1533, 2250, 2209, 2113, 2211, 2277, 2210, 1837,
        2628, 2212, 2213, 2114, 1996, 1838}], 
      Line3DBox[{1852, 2000, 2126, 1271, 1851, 1999, 2125, 2224, 2614, 2433, 
       1850, 2222, 2281, 2223, 2124, 2432, 2613, 2251, 2221, 1849, 2219, 2220,
        2123, 2632, 2218, 2217, 1848, 2285, 1599, 2122, 1998, 1847, 2420, 
       2557, 2130, 1846, 2556, 2389, 1845, 2555, 2554, 2388, 1844, 1997, 2120,
        2612, 2405, 1843, 2321, 2322, 2117, 2431, 2609, 2216, 1842, 2214, 
       2215, 2116, 2643, 2284, 2283, 1841, 2282, 2636, 2434, 2136, 2129, 1840,
        2553, 2387, 1839, 2419, 2552, 2127, 2128}]}, {
      Line3DBox[{885, 1175, 1044, 2440, 886, 1180, 1057, 2451, 913, 1185, 
       1071, 928, 1190, 2563, 1081, 939, 2511, 1092, 950, 2517, 1101, 959, 
       2524, 1109, 2475, 968, 1118, 2485, 980, 1129, 2492, 992, 2534, 1139, 
       1003, 1369, 2616, 1441, 1148, 1012, 2541, 1385, 1386, 1156, 1020, 2548,
        1402, 1403, 1163, 1028, 2636, 1595, 1423, 1424, 1597, 1598, 1654}], 
      Line3DBox[{887, 1176, 1177, 2441, 888, 1181, 1182, 2452, 914, 1186, 
       1187, 2462, 929, 1082, 940, 2512, 1093, 951, 2518, 1102, 960, 2525, 
       1110, 2476, 969, 1119, 2486, 981, 1341, 1342, 2493, 993, 1355, 1356, 
       2498, 1653, 1668, 1669, 2647, 1370, 1442, 1371, 1373, 2604, 1239, 1387,
        1240, 1662, 1640, 1389, 1641, 2642, 1642, 1248, 1404, 1249, 1665, 
       1647, 1406, 1596, 2643, 1648, 1259, 1425, 1260, 1574, 1539, 1427}], 
      Line3DBox[{889, 1045, 2442, 890, 1058, 2453, 915, 1072, 2463, 930, 1083,
        2468, 941, 1094, 952, 2519, 1103, 961, 2526, 1111, 2477, 970, 1330, 
       1331, 2487, 1333, 1221, 1343, 1222, 2645, 1659, 1628, 1345, 1629, 1630,
        1226, 1357, 2640, 1227, 1660, 1631, 1359, 1507, 1559, 1232, 2574, 
       1372, 1233, 1561, 1508, 1375, 1517, 1562, 2627, 1241, 1388, 1242, 1564,
        1518, 1391, 1529, 2646, 1664, 1250, 1405, 1251, 1649, 1530, 1408, 
       2609, 1540, 1666, 1261, 1426, 1262, 1651, 1429}], 
      Line3DBox[{891, 1046, 2443, 892, 1059, 2454, 916, 1073, 2464, 931, 1084,
        2469, 942, 1095, 2471, 953, 1104, 962, 2527, 1318, 1319, 2478, 1321, 
       1216, 1332, 1626, 1625, 2639, 1335, 1491, 1586, 1492, 1344, 2625, 1494,
        1627, 1493, 1347, 1501, 1588, 1502, 1358, 2626, 1504, 1558, 1503, 
       1361, 1509, 1590, 1510, 2575, 1374, 1512, 1560, 1511, 1377, 1519, 1591,
        1520, 2580, 1390, 1644, 1663, 1643, 1393, 2607, 1252, 1407, 1253, 
       1412, 2612, 1263, 1428, 1264, 1036}], 
      Line3DBox[{893, 1047, 2444, 895, 1060, 2455, 917, 1074, 2465, 932, 1085,
        2470, 943, 1096, 2472, 954, 1305, 2591, 1307, 1309, 1209, 1320, 1624, 
       1623, 2638, 1323, 1483, 1584, 1484, 1334, 1488, 1554, 2630, 1487, 1556,
        1495, 1587, 1496, 1346, 1500, 2601, 1557, 1499, 1349, 1505, 1589, 
       1506, 1360, 2641, 1633, 1661, 1632, 1363, 1234, 2576, 1376, 1236, 1379,
        1243, 2582, 1392, 1245, 1021, 1409, 2611, 1443, 1411, 1029, 2554, 
       1170, 1037}], 
      Line3DBox[{897, 1049, 2445, 898, 2503, 1062, 919, 2505, 1076, 934, 2508,
        1087, 945, 1297, 2590, 1298, 1098, 956, 1617, 2593, 1618, 1310, 1448, 
       1106, 964, 2624, 1480, 1583, 1481, 1324, 1454, 1113, 2634, 972, 1489, 
       1490, 1337, 1458, 1121, 983, 1223, 1350, 2570, 1131, 995, 1229, 1364, 
       2572, 1141, 1005, 1237, 2577, 1150, 1014, 2542, 1158, 1023, 2549, 1165,
        1031, 2556, 1172, 1039}], 
      Line3DBox[{899, 1050, 2446, 900, 1063, 2456, 920, 2506, 1077, 935, 1290,
        2589, 1088, 946, 1609, 1193, 2637, 1610, 1577, 1578, 1579, 1476, 2520,
        1199, 1551, 1449, 1450, 1581, 2633, 1482, 1210, 1325, 1455, 1456, 
       2597, 973, 1217, 1338, 1122, 2599, 984, 1224, 1351, 1132, 996, 1230, 
       2573, 1142, 1006, 2537, 1151, 1015, 2543, 1159, 1024, 2550, 1166, 1032,
        2557, 1430, 1431, 1173, 1040}], 
      Line3DBox[{901, 1051, 2447, 902, 1064, 2457, 921, 1078, 2466, 936, 1291,
        2644, 1656, 1089, 947, 1611, 2514, 1194, 1612, 1446, 1447, 1580, 1477,
        2521, 1200, 1552, 1451, 1452, 1652, 1582, 2528, 1211, 1326, 1114, 
       2598, 974, 1218, 1339, 1123, 2600, 985, 1225, 1133, 2494, 997, 1143, 
       1007, 2538, 1152, 1016, 2544, 1160, 1025, 2551, 1413, 1414, 1167, 1033,
        1599, 1265, 1432, 1460, 1461, 1600}], 
      Line3DBox[{903, 1052, 2448, 904, 1065, 2458, 922, 1279, 1280, 2467, 
       1439, 1281, 2586, 1657, 1282, 1658, 1293, 1468, 2620, 1195, 1549, 1196,
        1469, 1299, 1478, 2622, 1201, 1620, 1202, 1619, 1312, 2594, 1212, 
       1327, 1213, 2479, 1329, 1219, 1340, 1220, 2488, 986, 1134, 2495, 998, 
       1144, 2499, 1008, 1153, 1017, 2545, 1394, 1395, 1397, 2608, 1254, 1415,
        1255, 1667, 1650, 1416, 1541, 2632, 1570, 1266, 1433, 1267, 1576, 
       1542, 1434}], 
      Line3DBox[{905, 1053, 2449, 906, 1066, 2459, 923, 1283, 2587, 1284, 
       1285, 1191, 2564, 1292, 1192, 1608, 1295, 1470, 1197, 2629, 1550, 1198,
        1471, 1301, 1479, 2623, 1203, 1311, 1204, 1314, 2595, 1214, 1328, 
       1215, 2480, 975, 1124, 2489, 987, 1135, 2496, 999, 1145, 2500, 1009, 
       1380, 2606, 1381, 1383, 1246, 1396, 1247, 1646, 1645, 1399, 1531, 2631,
        1566, 1256, 1569, 1257, 1572, 1532, 1418, 2613, 1543, 1573, 1268, 
       1575, 1269, 1544, 1436}], 
      Line3DBox[{907, 1054, 2450, 908, 1067, 2460, 924, 1286, 2588, 1287, 
       1288, 1606, 1607, 2565, 1294, 1465, 1464, 1547, 1472, 1473, 2567, 1300,
        1614, 1613, 1303, 1205, 2568, 1313, 1206, 1440, 2615, 1316, 1317, 
       2481, 976, 1125, 2490, 988, 1136, 2497, 1000, 1365, 2603, 1366, 1368, 
       1238, 2578, 1382, 1638, 1637, 1639, 1521, 1592, 1522, 2583, 1398, 1524,
        1565, 1523, 1568, 1533, 1594, 1534, 1417, 1536, 1571, 1535, 1420, 
       2614, 1545, 1546, 1435, 1270, 1041}], 
      Line3DBox[{909, 1276, 2585, 1277, 910, 1068, 2461, 925, 1289, 1444, 
       1603, 2617, 1602, 1655, 1604, 1605, 2566, 1296, 1467, 1466, 1548, 1474,
        2621, 1475, 1302, 1616, 1615, 1304, 1207, 2569, 1315, 1208, 965, 1115,
        2482, 2483, 977, 1126, 2491, 989, 1352, 2602, 1353, 1354, 1231, 1367, 
       1635, 1634, 1636, 1513, 1514, 2579, 1384, 1516, 1515, 1563, 1525, 1593,
        2635, 1526, 1400, 1528, 1567, 1527, 1401, 1537, 2628, 1538, 1419, 
       1258, 1421, 1271, 1437, 1272, 1438}], 
      Line3DBox[{1034, 1168, 1422, 2552, 1026, 1161, 2546, 1018, 1154, 2539, 
       1010, 1146, 2535, 1001, 1137, 2532, 990, 1127, 2530, 978, 1116, 2529, 
       966, 2473, 1107, 2522, 957, 1099, 2515, 948, 1090, 2509, 937, 1079, 
       2561, 1188, 926, 1069, 2559, 1183, 911, 1055, 2558, 1278, 1178, 883, 
       1042, 1445, 1274, 1463, 1462, 1273}], 
      Line3DBox[{1035, 1169, 2553, 1027, 1162, 2547, 1019, 1155, 2540, 1011, 
       1147, 2536, 1002, 1138, 2533, 991, 1128, 2531, 979, 2484, 1117, 967, 
       2474, 1108, 2523, 958, 1100, 2516, 949, 1091, 2510, 938, 1080, 2562, 
       1189, 927, 1070, 2560, 1184, 912, 1056, 1179, 884, 2584, 1043, 1275, 
       1174, 1601}], 
      Line3DBox[{1038, 1171, 2555, 1030, 1164, 2610, 1410, 1022, 1157, 2581, 
       1244, 1013, 1149, 1378, 2605, 1235, 1004, 1140, 2571, 1362, 1228, 994, 
       1130, 2619, 1459, 1348, 1498, 1497, 982, 1120, 2618, 1555, 1457, 1336, 
       1486, 1585, 1485, 971, 1112, 1553, 1453, 1322, 1622, 2596, 1621, 963, 
       1105, 1308, 2592, 1306, 955, 1097, 2513, 944, 1086, 2507, 933, 1075, 
       2504, 918, 1061, 2502, 896, 1048, 2501, 894}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
n7Dd0ZN9LIj9FOM+c3c32nByr76r+lSPNZnpsXp1B4w+4lJze09v849W3hWa
uNcDan4ncyaZO8m8mdv3gZqLHDae5eI5qbq4ZBjPR8frzKkevzwh0gD3+nLL
l5a4z5dv0KJ654j26mHcQ5syhan+SXoS6U2kL5X0zadyPTficyfO+SwR92c4
30kOkVwieXQhbSvlm4dL8igfbQ+4Tfkn0TnRPdE74SXhKeHnkn2IwlG0OKwB
45o8DtsxnpsjBHftLKLDtKw72/HV9E003aZ0yr/DjoPc9W40IXBA9ncyC7X6
/dy41psOux0XCJ3dxEIjuYJHfm/kIA07H5kVNYUgeX479T3Ij5K+ksFHl2mf
w2Xu4+9DtsFuam4XbQy5gud4uUx+an4Xb/1CzZlRKnwleO48vtAxH8+bRXvG
qbmIrRK9D89JbRvdqflou6hXJO7xt383deJeb3jxdTTu86R3kh5K+qfqgr/B
uCcdfLo9Cvcmo7l6VF8q/z1I5XqnyiUq53XmLqXjfO+8oUzlkPemSCqX5j2x
oPLIrqGE8s0ZdnsoH41r5I5h/zQ8pEzpfJGVOqX74IEH0Vjv22yWU7yUEYxt
xzzNnLxhj/nZkihL4TjrsRCFa/xA5iaMp1kII3bxZjZ6sj05Dl+Z6irGweJF
MCvk423XvWwk3vRiqcvtqflrwRhNZ0M2NH09Sn2vtO7mRtu3+a602QebGfj7
JfI9CPlehHwfssnNgprbC/wbuXiO3zJoSc3vZM4kcyeZN8lcROYkMh8p/kz5
vx7/+FsO7vVPL6dSfd53fxTVOweDb1I99POwOdU/vWe9pXrSEfsRqjch/ldU
X5ob8JDKdZ5qNZXzbibPqHwfMYmgckjRcRqVS+5rfWg4j7o/flyHfZN7/ekn
7KOhbW7F2D+Jzonuid7FpG0pXu4o+TAT8/T8dSmKn4t8TCkc5b9L3sG4Gp3t
pPCU3N12R+g6G63+33VbxnX3Uf8sOM9JeuprV4rIdfD2TCUD70G4Hf8j0eNM
IZqR+Hnoxe0u9JjP/6+nZB/c3dswVMDKQbyvHmHHHnBQttzAWYMFLLCGVM3q
hzRk/tpDhVbch1ps312KWdgFn/hTqb+/qhpH3Y/v3j3qPjZWx7Y7relA5Frh
2HTLbSMH/Lbc+3hHnI5meoXpAI2FZM6XvFTw6wYYCUSyr+sRv6dNXIdpL8p7
kn3Ibl8n7Nt3nVpHv6sqtS7lzd+p9ZC/J/cj9ymjz29ZKtSNyLVBcn7M5M4u
SGjoWjnLthMl5Oue6+xno6VFtU+bj7RDHPcetR9vX4fNeH93HHypfSXdDKXW
4fJHn1pXCC+YWk+Wtxz196neAdT9nnEHn+H7uNz60n/BoQJlqrrJBFzuRQ6b
ZtzXqesCwTG/VObmQvRiR8kG9WAWWtU1M2XJEBuyz8h27lB9h2Iy86uqg+tQ
0YhpiI/mIMiVT27pT29CXXqz/lnocVCg/Zw0NzUG2G8ofFNbXYMOz7vyc1lQ
N9pXeNHfJ5ADh2R5Yi+ls1BznUTN6n3l6PArpQcvfw5CtejYt1V5eZChI5jy
mtkCixkP+bZacsE/lfsky6Aawv+xNq370APLXXSDQ05N9ZbkAoXEQzVQpSbO
xyfBheA9dZ2PgprAaIu1rtcPOto98qXwbzwDBZ/W/BpkyIbM7itu8nL5qGSn
xNkZMdXoj0THTItdg5C97d+ck0fLQej200/5C5ugeERJbmcmFz6G/9aY/qcJ
nviu33RCngNnSx6UqOoy4PfQ0xmTK+hwMTAqPimlDwRSdyzWHmqE2nkWy7ha
zfAyZqHfWhkunG/KmZm3vRpMXrfOC5reBIkNc1eMdHOh8ckMRkRLCXzW3R8x
bUY7IteWSgP+8O8cKJlRoLH5eSRiHwtbe2jRA+RjTxca/cODc0kurwY2t8Aa
idLzUk5dsM9vHfvQMg7UFH6uM9/eCayLVuVv0zjQpWy8tlWqFU7KJkU8W9kJ
C/yfj+Zxe2Gf/DtavkQtXHuxSWh1Qzv0L2TOspTuBy9lhsrz9DJQtplH4XXm
Bm8rxk8oxPELxm1Ovye1jqN5jz/idXnQCqj1ZHxI0/qe1/nf9U6d5BMBLxZ4
faw0mnu1G9ZcOiz1XmAq99aFLrtm0AyHcwQf5gh1A0frq0epZg/k36gOmGdR
DQW5f1WerGPAV+2tgnxTvUZ4XvnB6V4lsDrgFcWnDzQ5Xcyv9E0hFK96FJ1P
4PMr/HXqND7Pwr2XhPE5uiXKUrjwRFTfYZyG+7ezMD5kHWRdZD2O1rvvadaz
QOCYwV18rVM/bORfWQUVBkoXmY1T/ed6+Z+IUxx4kRu9oO9rMQwZFI1hHq/+
KJGOeW1Ud/Um5jN/vRoN86br3iFJzKMgKa2lmD/z7stX4PMIs1lAnc/W7OVr
8LnM4NfyxPv3eL0nkcLjy9pAjMMzXiX1vOEGCer5Ch1XRfFz/fvvlnWndMHu
knjv1Oe9MKywy3f/2XIg+iF6Ijpi70qi+Jr8OlQL89fGaV0x5i3hAeEF4cNx
boUAxn3hWJYqPge1dR5WGP+DkUURqzjdUJ7ukCfvy4G0mwqNdKtqeHBiHvO6
WTu4/RM+slGDCa8ddH5dTOkG2cYLlI+0CXf+wb6iuP3iPewnH24bP8B6FnIb
y8H67no6wY91TfRD9ER0RHhJeEr4mTZxoHjPI9Z/1xJBCQX1bzUg0vyGudCw
DbwUdovphNDh9KzuKJN1vVDpNL4t0J+BDl0aVhPdwkatUQ+i32xtAeJrxOeI
v+XmX6T85YZ7QjL2m8TnD0KwzxA9E30TXac/dqRweTo0QuG0zNGmAeND1kHW
Rdajta1vWvxDJiLXP59OW9B20uG2eankuzQWSqvY75BFYyOV9T+KbKcVAfFZ
4rvEb6cdSp+cFJ/yRYP7itj/asevUr7nOzNfHvtLUJu5CPabtWM5XdhnOtI3
UrzxoWmWYx6J1zb6YP6Q8yPnSc6Ry9an8Lphu2Q7xq/pVuF9jBtZH1kvWeeZ
JUIXNl1go9+eJtR1xqZ4p+QD2XBOMO6Z8bEEWmCqo67hzDLUkJ6ZpLKZB5ne
IT77U4tRQnaD743UZrRB+7v5ilguKB5KpV6zWaupz9/G8+3E70tah1N/n/JZ
t6jheAKt0eMjdZ+eA26sOQvzUU+n/KZaMRZalnj41dVrHLixyanj2O4GtF4o
eGLnl06UI7KR36O7B1KWbnf9pZaCtoiIBNICeKjDYrZRlH4+8DXPm9vzLhmN
zFg/Pyqch5amzvNghuRB9KgP9fe7X+RR99twZxV1n6fbhKnn0T+HUM/XtHKh
npvhXLxrr2gZerh2VUZE7gBijyzpMKHXwM34f6ef0KqRWPZ7pwJGH7LSKbWb
X9cGbWu+roy/X4yO7LwVkto1gJRjfelh/2pAKPvM/RmLKlDT4eRpJy9z0QuZ
LUv5FzfDjBT/rN6jhajx9iK1Az0D6Awn8u7jgFoI9GwW+WBZiqalMZi3GvvR
uFzbr2POrXDYt2Ts+IF8RDvEKBusG0B9f2xmOYTWweE8xVZnqyJ0UU9nUPJI
H+J/miG/b6o/pN71Flvm2IDaH2W4VZn3IxNFb+NbX5sgVUdLpEO8CW1CSWdm
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
EC/QC+c3HH6zoqMD/llmmb+OqkG+wpKFT1vr0ZFb1hY2sVwo+VPQMl4xFQl/
B87PLX+NYmTejftNrTNI877yW9N1kDUjyzrPOwh93SBpdXiqP/xmHTn2fm8p
ONZmVWzeNjW/GZ1NT2UNwFolG+OCT02woGHCKE2hCzYtL29eJdgD+5ft/VTW
3grI3m2/rV8XtBa+9Y8KZUPjCsXCRIU2SJovNJQVyYJN3j9fTUQz4NrpYwV4
fU+uGVvi9Vb1Oe3B6yTrIOsi69Gdd0gVr3tH9E9qH7FWPGr9K7rChzWt6/+7
Xm2/Mem8iQuFUt5Pk4U7wWKa6Ls31l0QtDWqU2/q+eQ1+Zy8//Ll8nSJyS7I
701gdBYyQcs19aO8fScQfhC+EJ4QHhBeED4Q3hAeEf4QHAmuBE+x7tYDGK8F
+QfeYPwGX3oGYtw0ji7fjvHNrVyyDeNNp99vwjiH7D/cjdcnsevLO7xe9n79
T3idIpNhFP/mr9mpgflIr1WieEh4RnhH+EZ4SXhK+Cmts4eHz8lnL70En5tv
vxV1XhF71j/C+ldl6RzBfrB8lWAC9gGic6J7onfiC8QniD/M4L8ciPntGrT7
Oub7kR1GNzHPnRvytmN+dw0FfsV832o0SvHcQNZc6vc1BjC2Bp8Q9+LAwpX/
Ujn1DdAa0HvlVFM7bP9MK7RQZMF3BR164FEGmHe42EkWtsEa3oyOMvVuCJ7G
aaioYoLv7WI77DvV+9+lYR/6077uLPaflNRXLthfrMJXSmC/KZpTEIp9hvgR
8SfiS/LSayi9jax3zMP6G9Xse4t1F+Ke4SC/mwn3krzvejxmQs9KW74f6i0Q
caxYUDu2HRRPda+1HW6ZmnNtVngf7YGMQu+Z75ktYDXgPVasQwdv862dX5Kn
npvxPO5XXxXaxqkv3WFIR2Xr6Ym+A/3g9HG5wHZlBjLOKfBnmLGRlOvasupp
rSCTu67U5TcDGYREpH4VYCNFpZIj1kV0OBpjsAX7fulfm1k4B8zmnaL8X0Mi
IAf7Zsq0ACfso4N6r5jYP4lvEh8l/kn2Q/ZH9nW16+04XrdAbchsvA83k0Xt
eP0FMSHKeJ99+zSE8L7/LdNZjve7Xqj9m/J6OiLX5wrsQh/JPvDl+WjKzmci
J9niottrWUhCxyX+9CE6rJJVKsSv92WpaOHPW8Gbej9jRYL3CXEWkm9njybF
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
L15igfZAq0F6IBPqN6bGfBJrQ/kHAvJydDrQX6eVt7qaOFBWEt18z7AZ/fr5
ZnuwIh29Dj248ffePiD/jvwd+ffZHUGz8X4OMlfW4v0tULujjPdF+gTpF6RX
kD5B+gXpFQ5XJimeua2yGMa8Y0y8pfi2pbaM4o3QX1N9zKPpUePHMH8U5tbf
1xtkIvGAWl+1hDr0pOrS9nw2Cwg/CF8IT0g/IH2B9IT8gnQKr5V8OeIYP7Gw
EAo34l/Ez4iPefUPBmL/Cr38j/IzKB+ifIz0OdLvSK8jfY70O9LrirMlX50O
64bMlBUDaZ0cmMZ/tM6TXQUopON7s/NUXqfocNm2HDh6tq4va7wWkrJ/U/lR
zQx9jvMk8qOYFM4R5xu/cnF+KJs+oPLk1vx19ThHiO8QHyL+Q/yF+A3xGb31
79aODrJR8o2SnCLHYvQ2dvqaH8dZkPLjNtXbCvLUT+Iel8qvoo77G9EP0RPR
0UC3iMsleRY4Gr/ueWzMgj92pnzTzBug40wRldOj3Weo3N73ryAM5/Uaw3sf
cE7buDm44tw+GXRfE+f1AXPXXvz3K1a5XML3qxZ8PMk/dZ+E3P0D2NcUN3Ae
Yp+7np5pgf2N+BfxM+JjBZ/DKN2eqGQ0YR1H6pzTx/rVDGDZWQz0whZ9j1fV
5dVwIEdfe5tv5396JvomuibnRM6NnNcOWT0R3O9Xa0UO4b4vF6BvhXs+6dmk
d5O+nfDKjIv77m261iPcfx9Kt1O9d8jokJd1KBttrhl+u9+Jjbzr2Gur1b5A
pPpgiGmPK22+Tk7J9wQe2itSq1NEy4VitbAnr2zy0frGFy2eqVx0wHrfrGNW
dFhRGRq+OI6H9B6JxLqvu4v8Jc7pPWzPhYrqoXD8Wsf8DvW53V496n25T2Nf
5t4ph5Hm0NUfWGxQ4nz3K5VgQZCarXm8eAOkn5NexnezF5SMd9REvO6A67Nd
BS9/b4FTAQsEev+yIWkk/FaSZRf8XHXN1F2tH32sXVenwKhBi7dqXiwYaoHH
iWXCaz/0ouWX3ITjL9egGBfutuDUTrBbZu2iEcZB1iv379GiV6M9Wyzpi790
w5M9edQ+yy+YTUuNdqV1Pk+g9jvDzvjSprY+9Mj0V/O01cVo9IPj3i71TiD7
J3gQHFZ9aqNwFD/nTOHqO6OdwlPsAJPK+y/HrLRx/pdkpVG5f04mtwvfd1f5
94v4OWzRjdT9yX7I/si+XmY4z8L7Mb48n9rf1vRSY7wvsh+yP7IvpXHDb1hX
Z9ZNKmKd6UR8XY31RfyL+Bnxsez5JmmYl1yXcxRPuUM/tTA/izQUd2JfRrmB
Tdinh2T0NmB/Dni+cBjnR1GahjfOk4EgjzicIySnSW6TvJa7cGUE56Vxl04m
zs/Pz04dxLlJu3dsGj5Xx9yfM/E5f6maQ53vwgJfMZwfj4eMZ+A8eWOco49z
5EmJBtVj4i2ZQv5TvWZD5zc33GeM9g3KYd7waf02xTzKTwusw/zRSvEQxvm6
RdK+A+etQBebylnSS0hPIf3kfNBcKkeFpXpsca42SI+Y4DzV9H3aj/2x56TT
MPZLDyOHfuyTsp8cFTCPx9LV8zGvixLNbmI+13mOCZ0360V+MN739U01ept1
b2aoVxc82OFVcHuiH/k0bF1ymVaNvCend7882wwjD64Z3RPpR2tmaZau21OD
ihwbQhyqWyHg5e6NPa+a0OnXYiE5rvVISfV+xUOffrBS2sO3dF892t/6qsIx
iIHYxgnG+eUcsN9nlD6cGUnTa5f6kri+B7k+TqwXGGXCQ5mzVhr8Nahg8zSv
ZBUOUtJ93DF3GRNm1OUFClvfppUVGbTe6+pDFRaR0idsuqDm15b4fs0KpP9o
ad5rsT5069DpAK2hTjh5w1fUMTqYdilsupbZZS7i1evc2bOlDTSDwoKF3xSj
kCVPv/+u6Ud7kJX/Q0YrxHoVewtnBdCOrdvhVOw8gERW5BaqSjZD7GuL1Zx1
Bci47FuqCpeLxFgPHVRm4f9fdW/sioKbtJMPDcZrFgyiE7/+mZxm1oPR//N7
mIv+9/tOymG/lLjnc9HmRztOfU8ZQBu71YsK5jaAw//zu44v//e7jvlZsw+e
/eRNM6Afs8G/o+Ph8rbf174aGtcdvfBUCSE96eDcex6DyEUkVHhDRzV8nz+7
Vvj+NdpYZt+MLEEe2hbJfevpWgkK+3cWCBz7gpq0tzlYZg0iBc0bJr2Hq+BM
33lvL0MvWtGO9Dud63koJP5q5fbUMrgwohO+d/5n1LGNv9KeO4jKgwv2y+pU
gNn1wZ1idh60e6t3HL68h4f+ni87OHt7CbwbdEhfLv0JceDCVGXnIdnvMQf6
VpTB39+CuuJ1brRYQx0B6bM8lHPPNMJmUxFIf9wcpuWSgarCVs+pmXqu/G2a
jMrREhD0CDbLD79C01h85kysDw+ZZ/Ebjp8oABVnq9SPcz4gdNZUcqcxD53n
v7TiPbMI3Ce0M+T9L9Nc8zb6G0fyUFjzCnZDUR6UHio/u5n+Hn3SWaO69BAP
ZRbTOd8eFoLf1+nn3/gw0bhczgCtrRrReQkb9zDYUGWrISXrzkDLzt5s9mzu
QH9+qGXBRyYc/bdrnZ9UJ2qJqX2WXM1EPxqK32/ZwIA1w+dGRitakOf3vuYP
s3vQkufJfY6FHfB4ejFHTrIJma0PO+q7sg85mWqc+T3lh6FbVcN2itUjUz+N
j8OB/ajxZGk6o6sJLB+t2fniYQ1SsnTvXeXBRao3M/yWeTTApf/n9yed/vf7
k04MSYV8kQqUKXNnsf79AbRBTEKpU7EWBi4vOfzFphQFt90J+zAwgNYk3aF3
zK0BzzR1Wed5xahu6LqgofIgej9Psu+nSjXkr+tfMLSgcKpP37YNPDKInMPz
4suCq0A359O3RQfy0Q4TXREj30E0oDL4qEq8CpI5O+xmV+eit0JfokbjBtGX
XyVl95IqQfvhj75K1xw0dMyFf/mrKf7vDVXUPlUJjusezBH624M2bvuyLVSw
HOU8lwjOS5rCrXTHWNpGDjqz+I6VXwkdHXz3YbX/tS7w/zHrWMKUv9O5zpuK
pRjI6cW0F/4inZBcULP8wAMGahy/VsjxYSHV0WzX27vawP5XYmmlTyd6kHyC
58zioOPVTVFu7XSoHtQ7FnioDa29Y6AdE96L6rQVvyzob4KlFxfoBgIdJasK
n9iW2YeG78XeGnBthLH//W6a0P9+R83qf7+fFj2jf7TvSj1qGXkW9UKUixBf
k9mXX/UQFx21lRVTi5I3lHFrz3KRb/vq7GJOPXzzfxIv8LsamXM1Hj5I4KKj
pXNnbt/ZAKNFzIHDp/vRlc25bhn9hajlUv3Okdx2ePH/0XXn4VR9X8DAJUWD
BhRpQFERoaikWpXKkEqUTIVCg6JEJKU0oZKhkIyhDClDZtnmeR6uebqXey/X
VCgN9Dqnfb/v8/Y+v7/O86w/6nKdvdfaZ63P0ajW8ZjqRzJ3tv6a501BT9qK
hxo/d4C8bilVfB4TdcVMemkf7EJCmbRnwRfbwdfufL94bx+6FkufyuCgoYK8
vfH1wm2Q5qttvqaUhiR9FsUFu/QhMWphyd0lrWAT9H7Wz4YepObAmXNTh4E2
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
+wl34H5CqQulQyZ8heh6fomwyvVulENpMlgwOgAqoxHRujsR+j2mcao9qAuZ
BY/PWfeUBY200vuL3VtRLMsm9qNlPxrY+PDp6/PtcOO56JbVjm1IuCPmwGsW
A1Wq347cvGMmD8A+ow/2Gi9gp/EZ7p/fj/vnL+D+eZnnEpEy0Ag6j9UfnYpg
QMm+mzGGBVQINPztI7etDtTvnbA9q8ACVckSvmSDdiipOfvS+CQF4GPjsXwO
FqQ8XZ5rv7wV6vepCn8daYQv3cd7nW8NgoZ/5Y64nfXwrolafH0VFTUO2OV+
SOhD25ujJnjmdkIKPpcLxedyCJ/LXaL2hSX4UZFH6I2vGyxoSNzweW6eSQ8I
Y893J/Z9+bDr224y3LXzNhU9uXkw2LCOijp5nkYGrKTC24r+dZOWFFSdsim9
Xa0bNT51NXOU7Ifxm5fW9q5uhSh/x+wx3QEQ2/9i++FDLZCGfeN92Dd+iH3j
tWF2L965tIBrJffAhloWyGfHtVCS6+Csn6zSjjvtcOaJhp6xBAtW3rx1dY9e
HbyuPFuw3bEZVOZL//wUPggc3sObrcwqQflDw/qnZu3g8DXu2UA3CwSTWAp8
zDIoSJzl++xcJ2QdkGuWfMEC+8jcFKPaImBpnVLPMupDNQ/9jd37elCvq1xW
pG0XjL232z3bvQ+JvhiKrvrYjcpXfhBbWjJTLyTtVWtw7UG653gqp1y7UZKF
VsWPhX1gqa1pYXS0D73hS9j44U0XyvMtaTpH7QGu0b8esgH2kBuxhyyoYSb2
ZKoDHa3gmH2sqQXtjsjRKhbvh4HM7yzKhxJIMb8e5etXCdJdHZlf7w8DR7Rl
tsj1DvAbNuhneNIgs3qI8fhVL1QdDnX00emGy8cvvmDOY0LZjXXrj1e2wsV/
8tXTOF/dvLuTQ3dOF3hpmrZJ/B6A2O/fv8dlVMIG7Bv7Y984AvvGKu8pKz9Y
M9F2ra0ndH+3o8nj798pzXyOeTJ8NjfcmagkIr/wknQ7as+Rv7+cNrNeLb99
5IJxL6JeZdr82NSOLHV16ueq9EJwPn+8oSkTjfX309M/tCInha4cx/Qu8K16
a2ycWofamzedoX6vRO9ONdyzjR0Cb7fnKUr7qOjdtmb+2U+aUNWV2IuJzgx4
id1jW+weN2L3OK6yXOCbIRXM9UXmn7OkAVXxje6igB6I+SFomXudBiezGE+M
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
I4/7BsNw32A87hs8yG9MOmiFGx1IF41OeUJ6aG4nf5D+15WbzaQHVq3WRzpg
aZKupJMleCiKdLN2Fr4mvSznPbtIZ6pLqYp0p+JcxywJb4rd38bud2P3ubH7
pdj9U+y+qTXzN5Eu6grJ+aSTurXxEemjWiYpk44qx0Lmo2W/HLLPGumSnmqA
sBTpdd7Qns4n/E7/tmzS7fxqdI2c69g968smYs7D+6uIPTHfcbjsHNk3//JS
6A6ijz7FsoDsnz9ltop08Ux/c+wnnbxdi0kfL3r5KtKDW5nTQPpw+xJcSBfO
fekp0kFzPrKUdNFSQz1ID231+grSCytcNGJA+GFS3udIN4zXzZrsm1x4aYDs
o7zuGE72T0r4HyJdV7M7de8J5/WV4FXSd3VvuEg6sPEgpZ4baJ9N4VxDerAl
DR9Jh7RFd9CYcEm3F+dXEh7pEl0WOX/yOxgZEfMoqrJD14g5lPmJf98/Ihb1
9/0j+vj9I4nybeQcxT2TRy+IuQpR2yxynmIiYpYP0Yc0N2ic7EvKL1xG9iOl
yS0ifUADlW+kF6j+8g7pBIoyUkkXz2rTBdLJO+JkQPp4I3M5kgkP7ssZGunD
fdy4mHTh2H267L5ddr/uOH7viTZ+74kNfu/Jsfq/7z15YPr3vScJ+L0nx/IW
jhL9cO93nyb745ZYWqwk+uK09j4jvSr9fFXSr1IM3HGWcKvi/FaRHu68xT+u
ET7uffla0sXV0XhI+q0i/P4MwnM1eeksTTiux6k+5DlLXMycVcS5i1DO/gTi
vMXwgZEr8Rzukt6yPOK53BOWJA/xPI49f8KeR2HPoUhuLyB9SfFwXVvCm6xy
i3QnnMmf6QzSVTR4Y0A6i8HGYjTCV6yICSY9wczQYtIXTBwoIF3B4K+LjYh+
cf3bkWT/ON+xQT6ibzyzoamMONfrebG6hTjne51TTZ7vKY2P3iCeY11Ny3Ql
nmuZbVLMIZ5ncbwXI/tBg/586yD6Q18+2JFN9IWKr3keT/QRLld4cIHoK0y6
5k/2E7o9NyT72L5aeZB9bWu6hsh+to92CwQ4ZOqQ6zphd0okDWVU1DCmPBlw
jrPMaZtHJVrNnTM7yJWJfPIzloduosFIWhoi3CLl1b2kY5SmJEP6Rbs+SKKD
awtQnoN51a7oQXT17RKF+JBWkKyVCQ7TzEXzdmt7ynsPobfO9pDUTYHN2PXK
+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
+xhB5D7GQXIf47PjMNfJHZ2MO/rTlRZbzMSk+nHevMCeA0lew5bkNc6TvMbe
ce+NqUetfLr8YtDWt0z393dRjsv6GMPbf51duMtQVYLBBb/RJma7x6bHt2YW
MT9Ch+5sPtuBeFZY7Obo/si0zrc/Wq7Wy9x43zw1gK8cNVjxz9sG/ZTTmK0C
H3uZfeGXdPNWlqLKxavurR5sZ1LWbVlc6ZDDCD1cmNNwpgVxmDQIKv5oZURs
DwyoCNcwXaocvWHdTUh5o9HTG/XlTI1dHadpfTcjLub+PNDvM5o118/91flS
Jr5qhwLj3sO0+szUTztWjqzD0wd/XCxmVl+X3vRiuIdxEeqNOlFShhIWnWvt
KqhhOG5+yNXk7GJcxc+h3ZmVKNppWOF+XCVzU71MZndyF6NSwJ22aW4VSrjb
4bXZrIeZp2UklLL7JVNT983dRbsO8UvzbPLQ62Y0vDh6698UMfk7qzgNC2uR
v8qOmSv3dzI5blKSqmo1TJlbivSdqhq0SfP5M+i1Xa/FWP962cj8a/W+vam1
GrU610iuk25gmqvqUja8bWeK/hYFOK+sRe7Hwj20LXsZtejVQ0HFoYww3xGN
MOkq5HBA5G5jWA9Tdmzw6O6UfOb4cF5zxrIqJCustWC/UDcT/FFQeNKkCkb7
qapm0rwqlPNoyuoSjk7m4fp9j3XKvzB/Vzl4Qn/u4RqDyTzs983zKO8D6JUV
+HxwCu829rwWP1AbwtPHTFIdqRnS9mYyXLxe3BgsR1trnjcXufUyAW59S7tP
ZzO26hMuqq7+jMqCK8S3be9h9AycuS5cLmWOhi66OT3pM3sutn841b6L6XEJ
7Dfrqmba4zJfKbdUIOOYuL2XFTuYgGHBKB2VBsbA58dZL1SNLpGe01ek55SX
9Jy+dZl+CPpTF2+xOQt9qldmi0dAj+qkATkT6M8e5D3S5vQmgZkQGphsqVyE
+kgf6CnSB+pC+kBnGl7R3+7dhsouqCYY87WgTRYfJOdIlaOQSJvp0Le9VrFu
jvipWEYxMtLna8ZHFKi9YXDUqY+J/FFsrKCaxSxKXlL9wLUI+ZCeTSHSs9lD
ejaPft17HvpcNwYHFkK/6/JyBkGv64k9B39pbe9AvXY51+bINiMODY2PlVuK
0FkPu+3QG7oxetMZ6BG9oZSamZCYh/KrPyQ+2NjP9MVsTRIUCWOOH9efprPr
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
vYAdK4dOVexaha5MxJ6V2PyH2Gk6tWKJPLhNKUfLmsBr0uK5hl2hNB11UXCG
TmyWxr4QdXPiiaMzRPycEeK/eBAPhjowx4hjEkZcE4Z4JhLj+rxiyP06R/FA
ZZz3/quP89/d0Zo49/2zawTnnGUNeXDueeuuIzjvPD7X9ozk2loOHsM53ooD
bTjXq8VT2gR53gVTs1//ru5lrL/27vLWzmfOZRw+8a6jBJ290+H+JLaHabrf
/fIKZylzbELHmwlc5Sha+Mqsfb+6GKV384oa3lcwB2ctMsxoqUQNS224OE92
MMF8985wSdcwM/i2SHSJ1KMS2akdzV+akJS6/9GN8zsR41H64INvHvpTZcLc
+96I2nYFPxLq60SLA9z4SqOz0XD271DXuY1IPp9PM+J+F7oYveVjb1YmKrz1
wdRjcwOyaOkTFVzRjU4jfR+D0Xeoa4daq+2UXkbbJKtDTLuYETE2f1UYVYaE
BlVaFJS6ma21hW8yn5QzqZwbBhsjqlDDtZiWGwta0W+zJF5HtXb02enK73rp
PLTx9ukP+2Vb0LvXSfXKCh1ojbv6svCqbDTjdKZPsHIzstAI+9EwvROdsPzt
qmuYhaRv3F41zbQJGeRvVV6Z1InKfyw6pK2chR6T9wbK5L3BCfLeQNJPcHGA
WStS8dqxqkqpHWVfCVwsXZmFpkR/9bp4ogXJrdy2yICrAxXoTvFKP5+NVozz
1iYRb82WeGJW4zyxWkub6nT27/dRxP3HD/bveTpP/Ml79u/oSVysKOJiZRMX
61aknu0j9u/avUu16yH7dxZoddgwi/37el/8vmob+znKDjeKH2E/19A9nmGt
7OcZN86JGiTf87t+7lI8+RVMoCjTvYP9XixW29TfyX4flk68OrmIXT9kXZYd
naCXwxz1k1Hawq4jha9DzQqedzHeqvU7n8qWM3usr37NZufVCTyvzsxl551l
93/kx7LzkIo+7wzEzj9On5fOVGHnhdxonzQndp7o4A248p2dH9zJczUyzlk6
QvbV/WRfzUf21SbGp+MfsutWD/+9Bz76mUyE1B3VGHb9snLZnzuVncc7nVv9
J3iUMNv2zYzzZ+fzUj7tUAl2vustFbkcxc5/j5OKtdTZea/BfLmqCjsfhck9
f/mGnZ/meTPxfuy8lHV4v2M2O++UZJ9Ze5Gdh+61rprWxs4/G8j+pojsd36Q
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
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 288.68967017850997`},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0, 1}, {0, 1}, {-1.0008848602614366`, 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.616101740102721, -1.8121042685825877`, 2.356797251657796},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.3917802308314247`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ListPlot3D", "[", 
  RowBox[{"Map", "[", 
   RowBox[{"Flatten", ",", "data"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.391780248211912*^9, 3.391780256041587*^9}}],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyVWwl4jFf3J5SiVa2qakO0aqulaD8UdSg+pdUltQWlqkhTraXWRJW0fKqt
rYtdbRW72FIpmqhthoghk5gwZDIzmcy8mY0qLcWned9z7nNOkv//+d6nz/N2
fm7OPefc8957tvvUe2OjR0aUK1cuoUK5cvf++3+f5cv+eVKhdNxcAn/h+X+e
rDLG55bA9cdRBh1XCXz0qH8eTxn0fSXw0xn/PP4y5g0T/n/LmQr4nvat48mq
NZOB42ZwDF77TlHVdMJRD/HxFUZG/n1CjM+FHypH3nw4+wzweR3whu+5dqHj
WYKOC57YvOmVQQvOE456WDWrofkGXBT0fRC9OW3Ig9mXCUc9vNXs8U4zGuaL
ecMwdNCkig3OOKGsdUUc/47La6Y3l8tMeuD8m0kPnE8z6UHyg3qoVf/hfmcK
CwhHPWgfDh5RbZNX0PfBnJbv3z1QsYhw1MPXtez2Adf8Yt4w3O3bvWb1sUEo
y44RRz3g+nLcTPIiju9oQ/98fC7Jxed1wKZrS1ZMcfkEHRfxjzjqIb9ejbrr
7gQFfR/c6eZOyw6FCEc9ROTO7Ds6LSTmVXoo67tFHPXA1z2X9MDXN5fm4euY
S2++XrmkB8kP6gHlQhz1cKdKw20FH4cEfR98xdY9l/TA7SeX9DDMsEPko/R9
xEF6wO+X42ayZ8RRD7i+fHwuycvndRBfnI6rxHjUQ+n0fSXkov1B8M/m27i2
U1n7MuKoB27/LtIDt3MX6YHbs4v0wO3WVcIeOB0XFBrriL9RD70MO+T0fXDS
2McQRz1s1+05jc8bhnd1vaWVdQ4hjnrA/ZnjZrI3xFEP+P3y8blkz3xetT9w
Oi6SF3F8v2KcX5y+D6L09SK5UA919p+rkPJ2oZCX9oe0ss5dxFEPfB/wkR74
9672Of5d+0gP/PtVdj2MnRc+0sNJdk4pPaG8nL4PivR1IRz1cFfXv5D33nfR
T9dDWX4G4qgHPH85bib7Rxz1gPszH59L9sPnddD3y+m4yJ4RRz3g+nL6PpIX
cXy7BoVW/ZIeEPKq74LvT/IJkx74fhgmPfB9LEx6kDjqYZigg3ooft3brzgd
Vwk+UQ9oz5y+j9YXcZS7dHlxn9x1UP+dbMy7XugD/cfDMGC/bV1G7Q3A8VSB
pxP9SnWamur+XGD8NhG+dVLcrhq3/IKOGWy7q/xr44N7CdflzSyBo54fj+k+
o8GtQ4JOdhl4Lvz6xVudmhUcIVx/28vAHbDedavi1v0mgYfhevLiY0WJ50le
nZ890PaSpemCyE0k75rieb+E6cX72ExBRz7KH58XmdrtUM29RAfxtp/0b/xp
rV+FHvJL8En2k3XuQqtPThOfuj6Pkz+M9DOL7eSgwJW/fLpSesVJt48IfswQ
tfvrRqcvnhbr5Rbzqv07YvzPl25WPkv0dfvMgIkx32y5dOYE0dfHn4O9mz/a
V3d1ttBzFsSGHxv329HTNB7x1adcx1rVzRHrXijmTabvJct8I6ZJjyyiX774
bYOo7dfeOJR1lujruBXG9f1XVPryHKGfXGj+0c1Hn/0pS+gnF9ZONFsO3rDT
vLq8mpg3mb7Thm3rnbr0cbZYr8vwZu636ZPn5Qj9XIDoXQ8u7fXJJfHdOeDZ
lauLjnayie/OAUnbY5Zs35Uv7DAo5rWU8KsRX10s12ZwFdtJsphXPqYycAvZ
c/MPo/M/r3BUyOuEiOap7WvVvEj8F8OjHLDhxfGvvBDMF/bggsvVKw//8Ee7
sAcXbJjzV/VT693Ef5ti/AjcP2DajTPfnQHOjxkm9L+47srBLLG+BdBl1/uz
8kfkifV1QfO+5Qutl92Cfw98X9T96N3hDrFeHpjTP/GTKj0Lad7yxhv9T8TR
ni9/NubdZgE70dftxAvTfll9sTA1n+jr+L3v668DGYNmFgr+fVC/aE3Eo285
Bf8+6L2+W79Ji3w0b2wxnzlw+27HSRGvOIR+cmFo/P7yzTY7xbr7oV7zom19
VrmEvWkQtePmv60mn+DfD46GvTa8UMct+PdD96VHNk2PL6J59e3BDpvct565
u9Et7NMBiUmV3uwT4yH6xWp7PgRNqyzoMG6gOnd0PACNOp/pumsn0reSnW9j
55GN8PvZ+WWFuGL9pEDLaiNsS/8+SuM3FOtnGSQWx9dJgk/5WMn+6369sXbH
Gyaig/jr7uzvrJdPC/3nw9B5faeuLygUduICy/LrS2t+7CM+Iwy5x7P9ymbg
6VCf7W9Wsv/6XzbbWmOqTfBjhm6+1CVrKlyiefX1ckP8jzVS23+iEY52PvLY
v9L7Zyk9xxr7+af1h/eOCjqIfqax/ydZVzT4cncejUf713q1G2Y6lE/jEXc7
z1Xv+LOyB/078sKeRh2q7ywfEHrzwcsvbsh7JT5A9PV5bRTfcX6sAreS/btm
DdbGfOUR+rnn38adsc485BPrUgTHmr+b+diEoNCbH3pO2bE0LyYo5M0Dd8LD
TdZU1oS8F6F6/fGeuIOasFsH7J75TZw2URN26wBfp5hJTV4LiHW5N98S554O
tUPk9+jvMNxk/ozdsJNkSGN+Ec4rH1sZuJ3s2Z56Ifq5d84K/Tshvu7m9Tsa
BIh/XT8OeLrHltnv1pD6ccGgJ19aduLtgNCPC4a3f7rn9VZKLp3+UYg+vLn6
bzsvAOfnnj/jSXq9a7KD6Ov244HZ6+MWmSJDRF/H3fBzh+fOz90TovFo5z0O
Xp2/5QE1HvF2Z4aZrNGKH/RjNzn6Vs4f4CIc7Tlj5+djW44qJPq4n6esqpI9
8FBQ6McL+bV9Y7TJAWGfPmjV+fMKoxaGhH36oMlTq/u12xMQ856HrKU3Yl5e
qgn95MLvnWzHl7/mF/L64dsuX4+8b5SUV4MP/n3slyeTAoL/e3FHsyE5CXbJ
vx9an9gwzPmRnPeS8DfsZM9R+6pmxN4XEvKG4FK7nodapASEvAFotbHfQxl1
kL6Kt67odp6GeCcj3om4fOLcqC2HxLzycZI9txj+5NNtnsmh8eWNf/9sS3BJ
wR8hoWcXDO3dJG/esBDxs9KIp6Z9dDj5qtUOnL4ZwvtyUub/6hZ0CqDeccu5
a9WlXXngzlPhkSsHBYjOB4a9nWZ25SR7a/vle0crZBYJOt4SONrP4AX7qr3f
yEd0Vhhx1oAW3VoPSQwI/nOFvEinCPo3PAZ7J3sIR3toEzXhz7fruYhOeePf
uT5V/q8+swfUXxC8/27Tqfq5y8ZvN637ffo5bqy7ygtt1s/9NBzfwYjjcmfM
SPl8K+5XHkg34rguxX5akuBHPm6ykw55JzbNSrARHcS/9tSq4zZfEOuSL+zf
Sfbz1pHokdvOaSRXnBHH9Zh7ZeqFbBfRP2fEcRPq9PjJ/9Yl4PyYoeqe9QMv
L/EIfsww9unF+RXe9NK8sUYc16p4XdS6U56W7WNuOGmc48fzalT+ooWX6I8y
zv1KUOPoiYsBGk/5Q7aPqbwi3/fQ3grhFNu3Vf4sYdxyy5F6WURfP79sYt/2
GLhV7PNustsZk679suxMSOgnFzpfWbmjwmfKDjONOG6oyft5JbuJcLTnGgNS
Xs2DDWRXsUYcB4nT/6qwM0j0Y404bujv96dqr4eE3TpAY+e4yqPuZec+fi9B
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
   "], {{
     {EdgeForm[None], GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
K1z/y2Nrgp6KYfwrwz2FYrN6is/a2FXhGJ5Q+Cz03vHhPu1S/LMLn4XuiHUL
a9Hx8OqF9aS0YjZ8z9L94xeFNUT+89K5a18vTGcxT/tYeA91N305fKdTT1uz
8D1COjo21SPVqBqFNaSs6nuKB91T1fuuzB0Dn4brqfqNvLCeSyM/D9do1fUG
hWNVvfn/wvmyLWnVceH8mhTuRWcpbwvXCL23T9INaUm9whqofTgYrt3qC3TH
PTPFp/jYcH8yM8WYetqzUj1Vn7wzXDd1p2lb+Cxa5+7pWqV4blP4vFokf+9w
Tv09fK9U763+sGuKkx1Ju6Q9I5LeKva7FtbDntKb8J13LmO6FdZb+fsnDRwM
n1Y419TD1yl8r6kEPxTuSdQHqg/Znurvx+FarPt9h8L1Qrr1Tviuqjtxu8Ix
qTXuCvdI6pt6FNZ5afvgVAvU2zcrnC8NtW/hHk//l9ge7it0z7ugcJ4qrl4L
91q6a7Ys3A8rL6NwvdOdtWTqE9QjTE2ao/zOUv3S3bd+4dqnPvGMwvqvPWlc
+P8VyuWyqb7rXtC8cP7qO3sVrk2681UoXOvVDzcqrDnqQ1ulfNSZnppqlmpR
ldR76H5xINy/qTfunPJdfXHtwr2BzqJW4RqhvuaE1I+p5+2Y6pTuGZ2SJkg/
fgaxQRdU
         "]], Polygon3DBox[CompressedData["
1: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
heiJyP0vJdf6zeN9xNfXsvPhMuE12Ci+X6yLacInVmxz2Nrpoi8092l2rns5
+Vne0SQ5p47Q2m4Rv8exrji+9go/JTbOLK5diJF8l5qPWu/RZBkgC2x3VbJt
Er9GRbwfLdy92FenCr8i+jbyO2fuFjaL7rGBfhXHIGLPgGxbGi98cbZNHR32
ja9NIx6ytlj34zV2f/jvWWEfncTXL87V7bJrOWIWsapT9t7Y49nhH8gCmZya
7bMdK84BxJcDRf3Fdwz7HZJdy7SJ8xHvscWB4U/In1qDHN4+7IlcOQSbzJb5
PcUxcUyc79DimIj/DwdXHNOIZYdk9/atI372JAdWHHOINchrqfgLNHaz+POS
c22zyL+N2EfFNRj5qX22rtE53yKnPi1+cXatPDu511oX+qWGpDemR6I3oj+k
V3wl7JeekVxFzmqQXMPSr9BT0EvMSV7LM9Sg1KLUntQc1BrUjI3CP6lVqAFW
a/7B7Hr+KvaT3S89J3om+JXxPXqomeFfxOa/aHy5+KfJg8Jzk2tZalpq33+K
LsJXkFms5+7g8djvHaLzNT+hWJbI9CnxD2X3crNEF2p+hMamiL8lu9Y+v/h7
yOuj8O/G4S9dIv6RWxpk9w7vZtce+Bd3K9SM1IrcsbSL+EM+Joe/Si7I9sdb
RXU1vy279vwFHw/5UyvMT+5luEdYkNzT0LtTM1Er0cPT66Ef+qtbkmvRSnHt
RE26KvtOAF2jc2rRr7L7C2rS3YW/D31RY+7oXeM8byXfXZDDyF3vJ9dyxOeO
cT56F2rmpuIvSe69sS/6SXpuark9w3+p6dpGPKSfaJFdy34d8f6D5Fq2RsRz
6hNqc2p0eudnknsxejJ6mTvxoeKYia/is50iX+KP+Ni9xTUS+ZycRG9KP/m7
ZBuYHP5O/CGffxb+0gzdx/qXQv70tOgGHWGr2Cy9EjF0Vdg/uZacSy4lp5L7
kR/9A3cmZxTb4CwfLZ2pn+PD/uZqXW3hzdk1MXp+LFumyJI7ud7FNQ/xkRjG
Xczb4Q+8n16YnvjyZJ+bobUnhD9dq7m7IkbMjvNsCX2j3xXsvzhmYPv4ALbH
XRZrkcGUimucscSG7N6LHoz7PPo7+j3u97hT+CR8HF+/Ot73iPizKz4rZ94c
Z/4p+f5sdLHP4quThScW+zi+zRmeKI4RYHyeXoWehWd/TpYl8fPP8f5lxT6O
b5+P/MUPL373HI0tLO456TWpeW8u7qHpNemRTq+4LqP2nSUaWlxzUWudndxb
Yr8dwt8mhP6ptViPrJDZFWF/7A+dXxnnw/awwcvCfh8q/ibP8o7Him0KWzqH
GEMsE14ofG7omzuTi5LvQJAtdRa1FzK+IOxrcsS/pyOmXiFcPzlWct/1x+SY
SSzmjvm+sO/t4d9Nku84+fawOB97ILZRYx2THePwbWqevtk+vldxDj4w8K3F
PXTrWE8v1TnqDXqqhsU9NL1wr+TamzsI7h7I59Tyg8O/ztXYA8U1Ob6LD1Ob
zCq+e6BGITZvE16fHNPIxeTkw0O/5F5ycL/sHDo+6t8dtTZ+UdyzUjtSQ26L
eM+dCXUm5yfGt4r5xcU1ELmcnL5/cQ9NLcUZ7yjuuakFqQm5S98c9ot8uTtf
E/mGO/S6xXcm3JXQT1N7UIMgM2S3qLifRV70jB2K+zlqGWoaaidqqI7ZNciA
4p6KXmq68K+pTq+R
         "]], Polygon3DBox[CompressedData["
1:eJwtl3WcVlUQhu+9H70iIR3CEiLdtcDSsJQg3dIlsEizSEgpISVdkoKUdIki
SEiDdIciICCNS+rzMueP53dm3nPu/e6JmTNfeJvout0Dz/NWQlzIGfK8HBDu
e95MOj7ELkxbg7YO2lLsQvA9fIQ2AC0GmkIOtAyQHsrSVxFtO3YH6Me75+DP
hij8ptADbSB+f6iBX4dnWmOXxK4OC6AUWlG0YhAJg9HuwzGePQqHoRV+d8aN
o78e9idwFD6DqfRPh2lQgTHl3Hctoq88dlLauFCG/lTomWA+fhbND62ZvgeG
4cfCRbQLcA76418NbO1WwVrP1iwX783IM+9DFsiMVhStIPZc7EwwCd7gv4Z0
9CWkHYr2FE7znlNwAsLwU0OU+76UkAs/ApqjReFXhXn4xXhPfuwCUATWo3VC
6widYThab7TzsIhnF8J8uIy/l7490A97Ndp3tNV4Jgqqu70fj5YK+zX9byBA
y4s/W+dE3wU5oYTWE708dnbs4tATTsIJOAWzeX6U1p5xd7HvwG1ojNYLbQLP
bsFuBLWhMVo3tHLaF8jnfjcHWlbI5tvZy4OeHXuWO4dTIQQBZKYvGX0+9jPa
p5AeLYx2utY5ZHumvUsHCdFe0D6HcPreo52BlhySuX1WnKzSecZuAs3cdyZQ
LLh3T8aOD5t1JtF6QE83x61ovbEnYk+CqbAQLRtkhUi3jiOwfezrrNE1uALL
0GqhfUx/XWgI2/Q9+n36v4EZkJFxieEdKOLO4UH43e3DduwDMAj/AhxA2w97
IUVgc9H353Zrq7XKjh2BXUprCH3RLgUWB4qH5TAA/y/Yir0FNsFi/Eo8W5ln
qkB1+BYtXHOhP4Rf3LfvzeLWfJr79nGQImRnT2fwJTRA6+LO9gbs+vA5nIPB
9A+CXZ6dXY9xe2h2g8/4iS72I/ET4McHJcMNih04hD1eOZG2AM/m07nQWYdD
2Bd0vunfCBs8W4OLgcWV4muFW4MbsA57PWyGP/CvwRqXQ67Dft71M/zkW05R
X8vA5qc59eX3Z9J3zOW1KfRPhEnKRej7fIvbK/Sdxe5Du5s2NdpvimflX7RC
2n/ldDefHfCDnoXT9M/zLO+WVq5EKwtlfNu3ymg1lauhGnyhuSnueeYsnNHe
K2YZ1wa9LXT0LV7Suhz3n2+xsw3aQB+dUZ0p33KO7hmdZZ3p2i5fnYU5jJur
b4Ov8MMY9wj7IdzXHjP2jPv+XrQ78Z/QHteawUU4rrWnHRKY/Vhrj19B68z7
2mGvwC4f2F4coZ3MuB6B7cuntEv8t8fIGwJDYSzaA7T7kJSO52jd0HbAWOwx
8KWnZMm3MuYx5j8QIR3tLtodnT2evedyYpyQxbhi/W9IjD8G/ambr+Y9Af+V
ci12Bto4EKs2sLvM01p7dsfEc+++5+6bmMDiXzF/S3uhvdN8lUOxd8JBoXPp
YiBaeSGwVnGheWl+EzzLTW8Cuxd1P16FP3nXSTgBr5QbPLvfngV2b+v+Pgk3
9U2uf7jyBX4X2sW0i2An9kDP7v2HWmt4BEc8u1OUw3QudD5mwWGeGYj2i5uH
5jMS/xZ6HuwlOgPKRfgrtd9w2O3zFuw92MMUL9ibfatzIli/FtjNoYlvtcAL
eA4v4bxnZyDW2dfcebgMN936HsW+pBjH7wwD0Pop98HywGofxYviphVMQUsE
5RiXFD+Jb7HVUHc5difo4FssJERLAIngAeNToWVyd1087JSwEbqijUAbCaMV
92it0foozqAndEVbRrsUdru1UD7c5fZhgcuNdfBbQE+dY/xRvt1lrXhfY+xG
moPWDK092lDsmtjNYD72Qv/tEfVGQwysC6wGVN3XwY3vhB2DPVd5Ebujm0c3
tLFoYzR/aB9Y3aBaYYAb3w67n8uZP2K3DSwu98FS3Z3KI7ojA4tNxWMixib2
7T5XvRGN3V1rAmv1jpCtk9ZrEGwKrDZRPRLt6k/d8apfdJfrTh/v1rllyN6l
d/byLe7vu3N83uWAUvj5IZ9yvstHOht1dcdDPVcfq9YrGbKaWLVxYagSsntK
d9MSqOXbfX5PMaU4g33uDtBdphpRtWJeqBhYja+6vrnqE9/u0LvKgzyzA36F
277lnJLYt+CGZzVICZ5Ji54GGkAZtLzuG6rSVzqwelv/CXSf6F6pBO+6vPaM
98TCv56tczv0IfQP1ndAMbQ8UI/++vgtNV+dP/etq7ErB1arqT54xbivA6vb
VPslcXn5iW91YBoXW2XRPkDLDQXxI7VP7jfq+VYjhrmYGh1YvbiGtqrOAloJ
/L6+1dmqQRRXiq9hvtUqyRWDqmHcN63TfiomlZNgHPwPGpOunA==
         
         "]]}]}, {}, {}, {}}, {
     Line3DBox[{126, 33, 165, 44, 196, 197, 55, 228, 66, 259, 77, 280, 281, 
      88, 312, 99, 343, 344, 110, 375, 121, 617, 120, 616, 615, 119, 614, 118,
       612, 611, 117, 610, 116, 609, 115, 608, 607, 114, 605, 113, 604, 603, 
      112, 602, 111, 406, 100, 378, 377, 89, 347, 78, 315, 314, 67, 284, 56, 
      261, 45, 231, 230, 34, 200, 23, 168, 167, 12, 137, 1, 418, 2, 419, 420, 
      3, 421, 4, 423, 424, 5, 425, 6, 426, 7, 427, 428, 8, 429, 9, 430, 431, 
      10, 432, 11, 134, 22, 125, 126}], {
      Line3DBox[{418, 416, 704, 433, 711, 621, 703, 452, 629, 710, 470, 749, 
       637, 731, 490, 771, 489, 508, 655, 770, 527, 805, 663, 791, 546, 672, 
       804, 565, 846, 681, 826, 585, 866, 584, 602}], 
      Line3DBox[{420, 618, 706, 436, 622, 713, 715, 454, 734, 455, 473, 753, 
       638, 751, 492, 647, 774, 510, 657, 793, 530, 664, 807, 809, 548, 674, 
       829, 568, 850, 682, 848, 587, 690, 869, 604}], 
      Line3DBox[{421, 619, 707, 437, 719, 625, 720, 456, 740, 460, 475, 758, 
       640, 757, 494, 780, 497, 512, 659, 797, 531, 813, 667, 814, 550, 835, 
       554, 570, 855, 684, 854, 589, 875, 592, 605}], 
      Line3DBox[{424, 620, 709, 440, 724, 626, 722, 459, 634, 743, 478, 762, 
       642, 760, 496, 651, 783, 515, 661, 799, 534, 818, 668, 816, 553, 838, 
       557, 573, 858, 685, 856, 591, 694, 878, 608}], 
      Line3DBox[{6, 133, 17, 162, 163, 28, 193, 39, 225, 226, 50, 256, 61, 
       278, 72, 309, 310, 83, 340, 94, 372, 373, 105, 403, 116}], 
      Line3DBox[{425, 132, 441, 728, 628, 730, 461, 635, 747, 479, 766, 644, 
       769, 498, 789, 504, 516, 803, 523, 535, 822, 670, 825, 555, 844, 561, 
       574, 862, 687, 865, 593, 402, 609}], 
      Line3DBox[{426, 434, 712, 443, 732, 630, 733, 462, 471, 750, 480, 772, 
       646, 773, 499, 792, 656, 517, 528, 806, 537, 827, 673, 828, 556, 566, 
       847, 575, 867, 689, 868, 594, 885, 698, 610}], 
      Line3DBox[{428, 438, 718, 446, 457, 737, 739, 465, 756, 639, 483, 777, 
       648, 779, 502, 513, 796, 520, 532, 812, 540, 551, 832, 834, 559, 571, 
       853, 578, 872, 691, 874, 597, 606, 887, 612}], 
      Line3DBox[{429, 442, 721, 448, 741, 633, 742, 466, 759, 641, 485, 782, 
       650, 781, 503, 798, 660, 522, 536, 815, 542, 836, 676, 837, 560, 362, 
       580, 876, 693, 877, 598, 888, 700, 614}], 
      Line3DBox[{431, 447, 727, 450, 188, 746, 468, 484, 765, 487, 786, 652, 
       788, 506, 521, 802, 525, 541, 821, 544, 841, 678, 843, 563, 579, 861, 
       582, 881, 695, 883, 600, 613, 890, 616}], 
      Line3DBox[{432, 164, 451, 748, 636, 729, 469, 767, 645, 488, 790, 654, 
       768, 507, 279, 526, 823, 671, 545, 845, 680, 824, 564, 863, 688, 583, 
       884, 697, 864, 601, 891, 702, 617}], 
      Line3DBox[{603, 588, 870, 586, 569, 851, 849, 567, 549, 830, 547, 808, 
       665, 810, 529, 511, 794, 509, 493, 775, 491, 474, 754, 752, 472, 735, 
       631, 453, 714, 623, 716, 435, 417, 705, 419}], 
      Line3DBox[{607, 595, 879, 590, 576, 859, 857, 572, 839, 677, 552, 538, 
       819, 817, 533, 518, 800, 514, 500, 784, 495, 481, 763, 761, 477, 463, 
       744, 458, 444, 725, 723, 439, 422, 708, 423}], 
      Line3DBox[{611, 699, 886, 596, 692, 873, 871, 577, 683, 852, 558, 833, 
       675, 831, 539, 666, 811, 519, 658, 795, 501, 649, 778, 776, 482, 755, 
       476, 464, 738, 632, 736, 445, 624, 717, 427}], 
      Line3DBox[{615, 701, 889, 599, 696, 882, 880, 581, 686, 860, 562, 679, 
       842, 840, 543, 669, 820, 524, 662, 801, 505, 653, 787, 785, 486, 643, 
       764, 467, 189, 745, 449, 627, 726, 430}]}, {
      Line3DBox[{126, 729, 195, 191, 746, 189, 185, 742, 183, 179, 739, 738, 
       177, 173, 733, 171, 163, 730, 161, 157, 722, 155, 725, 151, 149, 720, 
       145, 715, 714, 143, 139, 703, 136, 168}], 
      Line3DBox[{134, 164, 159, 727, 158, 726, 153, 721, 152, 147, 718, 146, 
       717, 141, 712, 140, 133, 132, 131, 709, 130, 708, 129, 707, 128, 127, 
       706, 123, 705, 124, 704, 122, 137}], 
      Line3DBox[{165, 227, 767, 222, 765, 221, 764, 216, 215, 759, 210, 756, 
       209, 755, 204, 750, 203, 193, 192, 747, 187, 743, 186, 744, 181, 180, 
       740, 175, 734, 174, 735, 169, 710, 166, 200}], 
      Line3DBox[{167, 711, 135, 138, 716, 142, 713, 144, 148, 719, 150, 723, 
       724, 154, 156, 728, 160, 162, 732, 170, 172, 736, 176, 737, 178, 741, 
       182, 184, 745, 188, 190, 748, 194, 125}], 
      Line3DBox[{197, 768, 258, 254, 788, 252, 787, 248, 246, 781, 242, 779, 
       240, 778, 236, 773, 234, 226, 769, 224, 220, 760, 218, 763, 214, 757, 
       212, 208, 751, 206, 754, 202, 731, 199, 231}], 
      Line3DBox[{66, 526, 65, 525, 524, 64, 522, 63, 520, 519, 62, 517, 61, 
       516, 60, 515, 514, 59, 512, 58, 510, 509, 57, 508, 56}], 
      Line3DBox[{228, 279, 276, 802, 275, 801, 272, 271, 798, 268, 796, 267, 
       795, 264, 263, 792, 256, 255, 789, 250, 783, 249, 784, 244, 780, 243, 
       238, 774, 237, 775, 232, 229, 771, 261}], 
      Line3DBox[{230, 749, 198, 201, 752, 753, 205, 207, 758, 211, 213, 761, 
       762, 217, 219, 766, 223, 225, 772, 233, 235, 776, 777, 239, 241, 245, 
       782, 247, 785, 786, 251, 253, 790, 257, 196}], 
      Line3DBox[{259, 311, 823, 306, 821, 305, 820, 300, 815, 299, 294, 812, 
       293, 811, 288, 806, 287, 278, 277, 803, 274, 799, 273, 800, 270, 797, 
       269, 266, 793, 265, 794, 262, 770, 260, 284}], 
      Line3DBox[{281, 824, 342, 338, 843, 336, 842, 332, 837, 330, 326, 834, 
       833, 324, 320, 828, 318, 310, 825, 308, 304, 816, 302, 819, 298, 296, 
       814, 292, 809, 808, 290, 286, 791, 283, 315}], 
      Line3DBox[{312, 374, 863, 369, 861, 368, 860, 363, 362, 357, 853, 356, 
       852, 351, 847, 350, 340, 339, 844, 334, 838, 333, 839, 328, 327, 835, 
       322, 829, 321, 830, 316, 804, 313, 347}], 
      Line3DBox[{314, 805, 282, 285, 810, 289, 807, 291, 295, 813, 297, 817, 
       818, 301, 303, 822, 307, 309, 827, 317, 319, 831, 323, 832, 325, 836, 
       329, 331, 840, 841, 335, 337, 845, 341, 280}], 
      Line3DBox[{344, 864, 405, 401, 883, 399, 882, 395, 877, 393, 389, 874, 
       387, 873, 383, 868, 381, 373, 865, 371, 367, 856, 365, 859, 361, 854, 
       359, 355, 848, 353, 851, 349, 826, 346, 378}], 
      Line3DBox[{375, 415, 891, 414, 890, 413, 889, 412, 411, 888, 410, 887, 
       409, 886, 408, 407, 885, 403, 402, 397, 878, 396, 879, 391, 390, 875, 
       385, 869, 384, 870, 379, 376, 866, 406}], 
      Line3DBox[{377, 846, 345, 348, 849, 850, 352, 354, 855, 358, 360, 857, 
       858, 364, 366, 862, 370, 372, 867, 380, 382, 871, 872, 386, 388, 876, 
       392, 394, 880, 881, 398, 400, 884, 404, 343}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
avvbtQ5uqLRe+Uz1hSGh/dPlui2Q6HB43HJKf/8Z0i1Y7NWEx/JjbQachais
PaxsbGgTMCJHmmyJ48Od0OgVfdNbwbg9xDOA0Q4W34K9riY148Gkejuz5Rws
fawmHrrKBeF2C93N7kIIkt+z3dOpAxZpncvzfVMO1x2HMh5FZOLYFsPg4Idi
fJ679A/nAAMsX9karvtZjUvGN2lUh4rwueyNrL6XdbBuZn9GjWsRqn3qPHp6
ihinHl99QTiiGt7tqkucOYcHQ3Wvezb7dsKp/TvdIjfXwddvcVNWHStBTc9V
51cMcVH51dswp03U+6RzJon/kTPJGOiav0upCybkhnZ2qHFAccKuteus8uGS
wHrHs89M+KGjFysKrAWFre8P6C/v/pdb+NEc4zDNL+R3cb1W96Whx/SoGUY8
Mf6dvrKremwlbMizGK04uhPsh6upsf15sMhz7vZlgdTcXf76bUpfFRpb/K1x
rRLhAV3JiZmT66H7uzF+cONCn8jEqaiSBx3Cs6WVl0rg3uX2Fwcj+RAlPxTJ
6u2Eoj0uGlUL8uGrcIp4ossRaK6THbfjSjmmN2q6DqlJ/s0JNP4f5gTW5ktS
5i3pgk0yCom7vdigMyi91ZNTCl3PFZYEHEjFpcu3H3ZVlKAsb8MrP68yqKF5
tybNuxVp3r0XXg6FUXOau4NUSo2BAPa5sr0Gl+TDil1SOpn+Jdgylhk+TcjE
lbu3BWkYiaB9xVNWQlsNVNmevqg4hw1v3geNsj4qgMOGZ79v1+bBBLnLL2QC
uaBdkSi39mwV1C/4WXq6ugVKB2tudRp2w+cPVz1qpjOoOXHcxHyzdJA2lwhm
fYvCq7/2OK9rkMBCIwVHu2Ns6J1oPudQRBelQzZFvn2QDxUhBiGqBmV4++P0
kxcpnXYsRbPSTIMFJjSXLKC5pN5/cMmzNJcMp7nk+S8+3H94s3RZ+6J/+HMK
U6njH+4s3WX4prSECScyVK7fEAvgXMziEV0trTDnS4HdP9yu9ULnuEsBGZj2
seV/+J2VnNGtfzhfmOIdy3+4X6Bg/f/wvj3q+qDZ3oj+6sKv0Z+bUcg9F+U0
/P/JD0XR55GcQ/U7tx0CSllQbXHKpqayC95IvNpaYooBF+sHyrb74MkC/8Sg
1lx4feXjlhuREviIz93mvmlA653qXQ+lGBiV83VrxDkRXPbOUf+Hb/FFl8L/
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
sm3q4H8BcNq9vA==
    "]],
  Axes->True,
  BoxRatios->{1, 1, 0.4},
  ImageSize->{360., 288.6782190376153},
  Method->{"RotationControl" -> "Globe"},
  PlotRange->{{0., 1.}, {0., 1.}, {-0.9822872507286887, 1.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  ViewPoint->{1.6247744720917208`, -2.0943799102028167`, 2.1032547887923396`},
  
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{3.391780256851592*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"list", "=", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "0", ",", "1"}], "}"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.391780337717783*^9, 3.391780350662241*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slist", "=", 
  RowBox[{"SparseArray", "[", "list", "]"}]}]], "Input",
 CellChangeTimes->{{3.391780352212118*^9, 3.391780359758914*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"SparseArray", "[", 
   RowBox[{
    InterpretationBox[
     RowBox[{"\<\"<\"\>", "\[InvisibleSpace]", "4", 
      "\[InvisibleSpace]", "\<\">\"\>"}],
     SequenceForm["<", 4, ">"],
     Editable->False], ",", 
    RowBox[{"{", "10", "}"}]}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.391780361396398*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slist", "\[Equal]", "list"}]], "Input",
 CellChangeTimes->{{3.391780370841524*^9, 3.391780373496558*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.39178037396091*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"slist", "+", "3"}], "\[Equal]", 
  RowBox[{"list", "+", "3"}]}]], "Input",
 CellChangeTimes->{{3.3917803772477303`*^9, 3.39178038215386*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.39178038271869*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slist", "+", "3"}]], "Input",
 CellChangeTimes->{{3.39178038496119*^9, 3.391780387803841*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"SparseArray", "[", 
   RowBox[{
    InterpretationBox[
     RowBox[{"\<\"<\"\>", "\[InvisibleSpace]", "4", 
      "\[InvisibleSpace]", "\<\">\"\>"}],
     SequenceForm["<", 4, ">"],
     Editable->False], ",", 
    RowBox[{"{", "10", "}"}], ",", "3"}], "]"}],
  False,
  Editable->False]], "Output",
 CellChangeTimes->{3.3917803883417997`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sin", "[", 
   RowBox[{"N", "[", "slist", "]"}], "]"}], "==", 
  RowBox[{"Sin", "[", 
   RowBox[{"N", "[", "list", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.3917804051060877`*^9, 3.391780434690474*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{{3.391780414561316*^9, 3.39178043517402*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"slist", "===", "list"}]], "Input",
 CellChangeTimes->{{3.391780441555681*^9, 3.391780443305654*^9}}],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{3.391780443711101*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Normal", "[", "slist", "]"}]], "Input",
 CellChangeTimes->{{3.3917804453109617`*^9, 3.3917804478149548`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
   ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.3917804482705812`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"%", "===", "list"}]], "Input",
 CellChangeTimes->{{3.3917804522380037`*^9, 3.391780453921732*^9}}],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{3.391780454228366*^9}]
}, Open  ]]
},
WindowToolbars->{},
WindowSize->{572, 756},
WindowMargins->{{3, Automatic}, {Automatic, 0}},
Magnification->1.,
FrontEndVersion->"6.0 for Mac OS X x86 (32-bit) (April 20, 2007)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[590, 23, 165, 3, 27, "Input"],
Cell[758, 28, 135, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[930, 36, 158, 3, 27, "Input"],
Cell[1091, 41, 134, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1262, 49, 195, 4, 27, "Input"],
Cell[1460, 55, 268, 9, 39, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1765, 69, 209, 5, 27, "Input"],
Cell[1977, 76, 154, 4, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2168, 85, 126, 2, 27, "Input"],
Cell[2297, 89, 73, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2407, 95, 117, 2, 27, "Input"],
Cell[2527, 99, 203, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2767, 109, 284, 8, 27, "Input"],
Cell[3054, 119, 232, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3323, 131, 162, 3, 43, "Input"],
Cell[3488, 136, 73, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3598, 142, 153, 3, 27, "Input"],
Cell[3754, 147, 217, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4008, 159, 182, 4, 27, "Input"],
Cell[4193, 165, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4300, 171, 150, 3, 27, "Input"],
Cell[4453, 176, 308, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4798, 190, 938, 29, 43, "Input"],
Cell[5739, 221, 854, 28, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6630, 254, 129, 2, 27, "Input"],
Cell[6762, 258, 74, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6873, 264, 126, 2, 27, "Input"],
Cell[7002, 268, 73, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7112, 274, 177, 4, 27, "Input"],
Cell[7292, 280, 342, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7671, 296, 126, 2, 27, "Input"],
Cell[7800, 300, 3289, 83, 88, "Output"]
}, Open  ]],
Cell[11104, 386, 375, 10, 27, "Input"],
Cell[CellGroupData[{
Cell[11504, 400, 280, 8, 27, "Input"],
Cell[11787, 410, 257, 8, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12081, 423, 108, 3, 27, "Input"],
Cell[12192, 428, 127, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12356, 436, 154, 3, 27, "Input"],
Cell[12513, 441, 127, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[12677, 449, 132, 2, 27, "Input"],
Cell[12812, 453, 302, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13151, 467, 131, 2, 27, "Input"],
Cell[13285, 471, 304, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13626, 485, 124, 2, 27, "Input"],
Cell[13753, 489, 135, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13925, 497, 197, 5, 27, "Input"],
Cell[14125, 504, 183, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14345, 514, 160, 3, 27, "Input"],
Cell[14508, 519, 293, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14838, 530, 147, 3, 27, "Input"],
Cell[14988, 535, 251, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15276, 547, 191, 5, 27, "Input"],
Cell[15470, 554, 136, 3, 27, "Output"]
}, Open  ]],
Cell[15621, 560, 252, 7, 27, "Input"],
Cell[CellGroupData[{
Cell[15898, 571, 195, 5, 27, "Input"],
Cell[16096, 578, 635, 22, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16768, 605, 229, 6, 27, "Input"],
Cell[17000, 613, 251, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17288, 625, 251, 7, 27, "Input"],
Cell[17542, 634, 278, 8, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17857, 647, 357, 11, 43, "Input"],
Cell[18217, 660, 634, 22, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18888, 687, 308, 9, 27, "Input"],
Cell[19199, 698, 554, 19, 45, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19790, 722, 262, 8, 27, "Input"],
Cell[20055, 732, 692, 13, 58, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20784, 750, 189, 4, 27, "Input"],
Cell[20976, 756, 2458, 42, 229, "Output"]
}, Open  ]],
Cell[23449, 801, 949, 25, 58, "Input"],
Cell[24401, 828, 144, 2, 27, "Input"],
Cell[CellGroupData[{
Cell[24570, 834, 97, 1, 27, "Input"],
Cell[24670, 837, 169, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24876, 845, 282, 8, 27, "Input"],
Cell[25161, 855, 197, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25395, 866, 213, 6, 43, "Input"],
Cell[25611, 874, 124, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25772, 882, 246, 6, 27, "Input"],
Cell[26021, 890, 643, 13, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26701, 908, 289, 9, 27, "Input"],
Cell[26993, 919, 291, 10, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27321, 934, 311, 10, 27, "Input"],
Cell[27635, 946, 317, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27989, 962, 297, 8, 27, "Input"],
Cell[28289, 972, 360, 11, 27, "Output"]
}, Open  ]],
Cell[28664, 986, 161, 3, 27, "Input"],
Cell[CellGroupData[{
Cell[28850, 993, 187, 4, 27, "Input"],
Cell[29040, 999, 253, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29330, 1011, 205, 5, 27, "Input"],
Cell[29538, 1018, 130, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29705, 1026, 365, 11, 27, "Input"],
Cell[30073, 1039, 243, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30353, 1051, 401, 12, 27, "Input"],
Cell[30757, 1065, 287, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31081, 1079, 212, 5, 27, "Input"],
Cell[31296, 1086, 251, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31584, 1098, 363, 11, 27, "Input"],
Cell[31950, 1111, 458, 15, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32445, 1131, 397, 12, 27, "Input"],
Cell[32845, 1145, 458, 15, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33340, 1165, 373, 11, 27, "Input"],
Cell[33716, 1178, 650, 21, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34403, 1204, 185, 4, 27, "Input"],
Cell[34591, 1210, 135, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34763, 1218, 344, 10, 27, "Input"],
Cell[CellGroupData[{
Cell[35132, 1232, 114, 3, 20, "Print"],
Cell[35249, 1237, 114, 3, 20, "Print"],
Cell[35366, 1242, 114, 3, 20, "Print"],
Cell[35483, 1247, 114, 3, 20, "Print"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[35646, 1256, 257, 7, 27, "Input"],
Cell[35906, 1265, 135, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36078, 1273, 197, 5, 27, "Input"],
Cell[36278, 1280, 71, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36386, 1286, 123, 2, 27, "Input"],
Cell[36512, 1290, 167, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36716, 1300, 148, 3, 27, "Input"],
Cell[36867, 1305, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[36974, 1311, 216, 6, 27, "Input"],
Cell[37193, 1319, 115, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37345, 1327, 202, 5, 27, "Input"],
Cell[37550, 1334, 115, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[37702, 1342, 265, 7, 27, "Input"],
Cell[37970, 1351, 581, 19, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[38588, 1375, 267, 7, 27, "Input"],
Cell[38858, 1384, 499, 10, 40, "Message"],
Cell[39360, 1396, 242, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39639, 1408, 257, 7, 27, "Input"],
Cell[39899, 1417, 196, 6, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40132, 1428, 249, 7, 27, "Input"],
Cell[40384, 1437, 463, 9, 23, "Message"],
Cell[40850, 1448, 222, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41109, 1460, 174, 4, 27, "Input"],
Cell[41286, 1466, 125, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41448, 1474, 118, 2, 27, "Input"],
Cell[41569, 1478, 127, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[41733, 1486, 173, 4, 27, "Input"],
Cell[41909, 1492, 125, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42071, 1500, 156, 3, 27, "Input"],
Cell[42230, 1505, 115, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42382, 1513, 151, 3, 27, "Input"],
Cell[42536, 1518, 144, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42717, 1526, 156, 3, 27, "Input"],
Cell[42876, 1531, 92, 2, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43005, 1538, 183, 4, 27, "Input"],
Cell[43191, 1544, 474, 15, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43702, 1564, 275, 8, 27, "Input"],
Cell[43980, 1574, 331, 11, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44348, 1590, 136, 2, 27, "Input"],
Cell[44487, 1594, 558, 17, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45082, 1616, 319, 8, 27, "Input"],
Cell[45404, 1626, 70, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45511, 1632, 552, 16, 27, "Input"],
Cell[46066, 1650, 448, 14, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46551, 1669, 259, 7, 27, "Input"],
Cell[46813, 1678, 167, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47017, 1686, 457, 13, 27, "Input"],
Cell[47477, 1701, 284, 9, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47798, 1715, 568, 17, 27, "Input"],
Cell[48369, 1734, 902, 28, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49308, 1767, 556, 18, 27, "Input"],
Cell[49867, 1787, 251, 7, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50155, 1799, 219, 5, 27, "Input"],
Cell[50377, 1806, 189, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50603, 1816, 321, 10, 27, "Input"],
Cell[50927, 1828, 158, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[51122, 1837, 507, 15, 27, "Input"],
Cell[51632, 1854, 605, 22, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52274, 1881, 166, 4, 27, "Input"],
Cell[52443, 1887, 443, 17, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52923, 1909, 305, 9, 27, "Input"],
Cell[53231, 1920, 123, 3, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53391, 1928, 367, 11, 27, "Input"],
Cell[53761, 1941, 271, 9, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54069, 1955, 370, 10, 27, "Input"],
Cell[54442, 1967, 721, 23, 82, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55200, 1995, 239, 6, 27, "Input"],
Cell[55442, 2003, 532, 10, 43, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56011, 2018, 129, 2, 27, "Input"],
Cell[56143, 2022, 714, 17, 195, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56894, 2044, 915, 26, 58, "Input"],
Cell[57812, 2072, 493, 15, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58342, 2092, 163, 3, 27, "Input"],
Cell[58508, 2097, 362, 13, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58907, 2115, 335, 9, 27, "Input"],
Cell[59245, 2126, 145516, 2356, 304, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[204798, 4487, 192, 4, 27, "Input"],
Cell[204993, 4493, 48605, 795, 304, "Output"]
}, Open  ]],
Cell[253613, 5291, 276, 7, 27, "Input"],
Cell[CellGroupData[{
Cell[253914, 5302, 160, 3, 27, "Input"],
Cell[254077, 5307, 365, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254479, 5324, 129, 2, 27, "Input"],
Cell[254611, 5328, 72, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254720, 5334, 176, 4, 27, "Input"],
Cell[254899, 5340, 72, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255008, 5346, 118, 2, 27, "Input"],
Cell[255129, 5350, 377, 12, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255543, 5367, 243, 6, 27, "Input"],
Cell[255789, 5375, 96, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255922, 5381, 124, 2, 27, "Input"],
Cell[256049, 5385, 74, 1, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256160, 5391, 133, 2, 27, "Input"],
Cell[256296, 5395, 204, 5, 27, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256537, 5405, 122, 2, 27, "Input"],
Cell[256662, 5409, 73, 1, 27, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

